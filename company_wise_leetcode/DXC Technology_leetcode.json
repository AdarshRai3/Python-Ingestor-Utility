[
  {
    "question_id": "",
    "title": "Longest Common Prefix",
    "description": "Write a function to find the longest common prefix string amongst an array of strings. If there is no common prefix, return an empty string \"\".",
    "topic": "String",
    "subtopic": "String Manipulation",
    "tags": [
      "String",
      "Prefix",
      "Array"
    ],
    "input_format": "An array of strings strs.",
    "output_format": "A string representing the longest common prefix.",
    "constraints": [
      "0 <= strs.length <= 200",
      "0 <= strs[i].length <= 200",
      "All input strings are lowercase letters a-z."
    ],
    "examples": [
      {
        "input": "strs = [\"flower\", \"flow\", \"flight\"]",
        "output": "\"fl\"",
        "explanation": "The longest common prefix is \"fl\"."
      },
      {
        "input": "strs = [\"dog\", \"racecar\", \"car\"]",
        "output": "\"\"",
        "explanation": "There is no common prefix among the strings."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider the first string as a prefix candidate and check it against the others.",
      "Reduce the prefix length until it satisfies all strings."
    ],
    "company": "DXC Technology"
  },
  {
    "question_id": "",
    "title": "Sort Array By Parity",
    "description": "Given an array of integers, you need to sort the array such that all even integers appear before all the odd integers. You should maintain the relative order of the even and odd integers in the sorted array.",
    "topic": "Array",
    "subtopic": "Sorting",
    "tags": [
      "Array",
      "Sorting",
      "Two Pointers"
    ],
    "input_format": "An array of integers nums.",
    "output_format": "A new array where all even integers are at the beginning, followed by all odd integers.",
    "constraints": [
      "1 <= nums.length <= 10^4",
      "-10^5 <= nums[i] <= 10^5"
    ],
    "examples": [
      {
        "input": "nums = [3, 1, 2, 4]",
        "output": "[2, 4, 3, 1]",
        "explanation": "Even numbers are 2 and 4 which are sorted before the odd numbers 3 and 1."
      },
      {
        "input": "nums = [0, 1, 2, 3]",
        "output": "[0, 2, 1, 3]",
        "explanation": "Even numbers 0 and 2 come before odd numbers 1 and 3."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Try using a two-pointer technique to rearrange the elements."
    ],
    "company": "DXC Technology"
  },
  {
    "question_id": "",
    "title": "Rotate Array",
    "description": "Given an integer array nums, rotate the array to the right by k steps, where k is non-negative. You must do this in-place with O(1) extra space.",
    "topic": "Array",
    "subtopic": "In-place Rotation",
    "tags": [
      "Array",
      "Rotation",
      "In-place"
    ],
    "input_format": "An integer array nums and a non-negative integer k.",
    "output_format": "The array nums after rotating it to the right by k steps.",
    "constraints": [
      "1 <= nums.length <= 10^5",
      "0 <= k <= 10^5",
      "-10^6 <= nums[i] <= 10^6"
    ],
    "examples": [
      {
        "input": "nums = [1, 2, 3, 4, 5, 6, 7], k = 3",
        "output": "[5, 6, 7, 1, 2, 3, 4]",
        "explanation": "After rotating the array 3 steps to the right, the last three elements 5, 6, and 7 move to the front."
      },
      {
        "input": "nums = [-1, -100, 3, 99], k = 2",
        "output": "[3, 99, -1, -100]",
        "explanation": "After rotating 2 steps, the last two elements move to the front."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider the effective rotation when k is greater than the array length.",
      "Reverse parts of the array to achieve the rotation.",
      "Using the reverse method can help in reducing space complexity."
    ],
    "company": "DXC Technology"
  }
]