[
  {
    "question_id": "",
    "title": "Avoid Flood in The City",
    "description": "In a city, there are N buildings arranged in a line. Each building has a height, and after heavy rain, some areas tend to flood. To prevent flooding, you can modify the height of the buildings such that their heights do not exceed a particular threshold. Your task is to determine the minimum number of height changes needed to avoid flooding in the city.\n\nYou are given an array heights where heights[i] represents the height of the i-th building. You also have an integer limit which is the maximum allowed height for any building. If any building exceeds this height, it causes a flood.\n\nReturn the minimum number of height changes needed to ensure all buildings are of height <= limit.",
    "topic": "Array",
    "subtopic": "Greedy",
    "tags": [
      "Array",
      "Greedy",
      "Flood Prevention"
    ],
    "input_format": "An array of integers heights and an integer limit.",
    "output_format": "An integer representing the minimum number of height changes required.",
    "constraints": [
      "1 <= heights.length <= 10^5",
      "1 <= heights[i] <= 10^9",
      "1 <= limit <= 10^9"
    ],
    "examples": [
      {
        "input": "heights = [3, 1, 4, 1, 5], limit = 3",
        "output": "1",
        "explanation": "You can reduce the height of the building with height 4 to 3. This results in 1 height change."
      },
      {
        "input": "heights = [2, 5, 6, 4, 3], limit = 4",
        "output": "2",
        "explanation": "You need to reduce the heights of buildings with height 5 and 6 to 4, resulting in 2 height changes."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Iterate through the heights and check how many exceed the limit.",
      "Count the number of modifications needed as you traverse."
    ],
    "company": "blinkit"
  },
  {
    "question_id": "",
    "title": "Single Element in a Sorted Array",
    "description": "Given a sorted array of integers where each element appears exactly two times, except for one element that appears only once, find and return the single element that appears only once. Your algorithm should have a runtime complexity of O(log n).",
    "topic": "Array",
    "subtopic": "Binary Search",
    "tags": [
      "Array",
      "Binary Search",
      "Searching"
    ],
    "input_format": "An array of integers nums sorted in ascending order.",
    "output_format": "An integer representing the single element that appears only once.",
    "constraints": [
      "1 <= nums.length <= 10^5",
      "nums[i] == nums[i+1] for even i and nums[i] != nums[i+1] for odd i"
    ],
    "examples": [
      {
        "input": "nums = [1, 1, 2, 2, 3, 3, 4, 4, 5]",
        "output": "5",
        "explanation": "All elements except for 5 appear exactly twice."
      },
      {
        "input": "nums = [2, 2, 3, 3, 7, 7, 8, 8, 9]",
        "output": "9",
        "explanation": "All elements except for 9 appear exactly twice."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider using binary search for optimal performance.",
      "The position of elements can help determine the half in which to search."
    ],
    "company": "blinkit"
  }
]