[
  {
    "question_id": "",
    "title": "Maximum Number of Pairs in Array",
    "description": "Given an array of integers, find the maximum number of pairs (i, j) such that nums[i] + nums[j] is even. A pair (i, j) is valid if i < j.",
    "topic": "Array",
    "subtopic": "Pairing Elements",
    "tags": [
      "Array",
      "Pairs",
      "Even Sum"
    ],
    "input_format": "An array of integers nums.",
    "output_format": "An integer representing the maximum number of valid pairs.",
    "constraints": [
      "1 <= nums.length <= 10^5",
      "-10^5 <= nums[i] <= 10^5"
    ],
    "examples": [
      {
        "input": "nums = [1, 2, 3, 4, 5, 6]",
        "output": "8",
        "explanation": "The pairs that form even sums are: (1, 3), (1, 5), (2, 4), (2, 6), (3, 5), (4, 6). Thus, a total of 8 pairs."
      },
      {
        "input": "nums = [2, 2, 3, 3]",
        "output": "4",
        "explanation": "The pairs are: (2, 2), (2, 3), (3, 3). Total of 4 pairs."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Group numbers by their parity.",
      "Count how many are even and how many are odd."
    ],
    "company": "Altimetrik"
  },
  {
    "question_id": "",
    "title": "Two Sum",
    "description": "Given an array of integers and a target integer, return the indices of the two numbers such that they add up to the target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order.",
    "topic": "Array",
    "subtopic": "Hash Table",
    "tags": [
      "Array",
      "Hash Table",
      "Two Pointers"
    ],
    "input_format": "An array of integers nums and a target integer target.",
    "output_format": "An array of two integers representing the indices of the two numbers that add up to target.",
    "constraints": [
      "2 <= nums.length <= 10^4",
      "-10^9 <= nums[i] <= 10^9",
      "target is assumed to be achievable with exactly one solution."
    ],
    "examples": [
      {
        "input": "nums = [2, 7, 11, 15], target = 9",
        "output": "[0, 1]",
        "explanation": "The numbers at indices 0 and 1 are 2 and 7, which add up to the target 9."
      },
      {
        "input": "nums = [3, 2, 4], target = 6",
        "output": "[1, 2]",
        "explanation": "The numbers at indices 1 and 2 are 2 and 4, which add up to the target 6."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use a hash table to store the indices of the numbers as you iterate through the array.",
      "Check if the complement of the current number exists in the hash table."
    ],
    "company": "Altimetrik"
  },
  {
    "question_id": "",
    "title": "3Sum",
    "description": "Given an array of integers nums, return all the unique triplets [nums[i], nums[j], nums[k]] such that i, j, and k are distinct indices, and nums[i] + nums[j] + nums[k] == 0. You may return the answer in any order.",
    "topic": "Array",
    "subtopic": "Two Pointers",
    "tags": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "input_format": "An array of integers nums.",
    "output_format": "A list of unique triplets, where each triplet is an array of three integers.",
    "constraints": [
      "0 <= nums.length <= 3000",
      "-10^5 <= nums[i] <= 10^5"
    ],
    "examples": [
      {
        "input": "nums = [-1, 0, 1, 2, -1, -4]",
        "output": "[[-1, -1, 2], [-1, 0, 1]]",
        "explanation": "The unique triplets that sum to zero are [-1, -1, 2] and [-1, 0, 1]."
      },
      {
        "input": "nums = []",
        "output": "[]",
        "explanation": "There are no triplets in an empty array."
      },
      {
        "input": "nums = [0, 1, 1]",
        "output": "[]",
        "explanation": "There are no triplets that sum to zero."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Sort the array to make it easier to avoid duplicates.",
      "Use a set to track unique triplets.",
      "Check for pairs using two pointers."
    ],
    "company": "Altimetrik"
  },
  {
    "question_id": "",
    "title": "Longest Palindromic Substring",
    "description": "Given a string s, return the longest palindromic substring in s. A palindromic substring is a substring that reads the same backward as forward.",
    "topic": "String",
    "subtopic": "Dynamic Programming",
    "tags": [
      "String",
      "Dynamic Programming",
      "Palindrome"
    ],
    "input_format": "A string s where 1 <= s.length <= 1000.",
    "output_format": "A string representing the longest palindromic substring in s.",
    "constraints": [
      "1 <= s.length <= 1000",
      "s consists of only digits and English letters."
    ],
    "examples": [
      {
        "input": "s = \"babad\"",
        "output": "\"bab\"",
        "explanation": "The longest palindromic substring is \"bab\". Note that \"aba\" is also a valid answer."
      },
      {
        "input": "s = \"cbbd\"",
        "output": "\"bb\"",
        "explanation": "The longest palindromic substring is \"bb\"."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Check every substring and verify if it is a palindrome.",
      "Consider expanding around the center of potential palindromic substrings."
    ],
    "company": "Altimetrik"
  },
  {
    "question_id": "",
    "title": "Design a Food Rating System",
    "description": "You are asked to design a food rating system. The system should allow users to rate different food items, and it must support functionalities such as adding a food item, rating a food item, retrieving the average rating of a food item, and listing all food items with their ratings. Each food item is defined by a unique identifier and its name. Users can give ratings between 1 and 5, inclusive.",
    "topic": "Design",
    "subtopic": "System Design",
    "tags": [
      "Design",
      "System",
      "Rating",
      "Food"
    ],
    "input_format": "A series of operations on food items: adding a food item (add), rating a food item (rate), getting the average rating (average), and listing all items (list). Each operation has specific parameters as described in the examples.",
    "output_format": "Return the appropriate responses for each operation in the order they were called.",
    "constraints": [
      "Food item names are non-empty strings with a maximum length of 100 characters.",
      "User ratings are integers between 1 and 5.",
      "The list operation does not exceed 10^4 food items."
    ],
    "examples": [
      {
        "input": [
          "add 1 Pizza",
          "add 2 Burger",
          "rate 1 5",
          "rate 1 4",
          "average 1",
          "list"
        ],
        "output": [
          "Food item added.",
          "Food item added.",
          "Rating added.",
          "Rating added.",
          "Average rating for Pizza is 4.5.",
          "1: Pizza (Average Rating: 4.5), 2: Burger (Average Rating: N/A)"
        ],
        "explanation": "Pizza has been rated twice giving it an average rating of (5 + 4) / 2 = 4.5. Burger has not been rated yet, so its average is N/A."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Use a data structure to store food items and their ratings.",
      "Consider how to efficiently calculate average ratings.",
      "Ensure that you handle edge cases where a food item might not have any ratings."
    ],
    "company": "Altimetrik"
  }
]