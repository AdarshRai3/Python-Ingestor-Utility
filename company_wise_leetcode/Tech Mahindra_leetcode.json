[
  {
    "question_id": "",
    "title": "Best Time to Buy and Sell Stock",
    "description": "You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.",
    "topic": "Dynamic Programming",
    "subtopic": "Max Profit",
    "tags": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "input_format": "An array of integers prices representing stock prices on different days.",
    "output_format": "An integer representing the maximum profit obtainable from a single buy and sell.",
    "constraints": [
      "1 <= prices.length <= 10^5",
      "0 <= prices[i] <= 10^4"
    ],
    "examples": [
      {
        "input": "prices = [7, 1, 5, 3, 6, 4]",
        "output": "5",
        "explanation": "Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6 - 1 = 5."
      },
      {
        "input": "prices = [7, 6, 4, 3, 1]",
        "output": "0",
        "explanation": "In this case, no transactions are done and the max profit is 0."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Keep track of the minimum price seen so far.",
      "Calculate potential profit at each price and update maximum profit accordingly."
    ],
    "company": "Tech Mahindra"
  },
  {
    "question_id": "",
    "title": "Reverse Integer",
    "description": "Given a 32-bit signed integer, reverse the digits of the integer. If the reversed integer overflows, return 0. Note that the integer should preserve its sign when reversed.",
    "topic": "Integer",
    "subtopic": "Mathematics",
    "tags": [
      "Integer",
      "Mathematics",
      "String Manipulation"
    ],
    "input_format": "A single integer x, where -2^31 <= x <= 2^31 - 1.",
    "output_format": "An integer representing the reversed digits of x, or 0 if the reversed integer overflows.",
    "constraints": [
      "-2^31 <= x <= 2^31 - 1"
    ],
    "examples": [
      {
        "input": "x = 123",
        "output": "321",
        "explanation": "Reversing 123 gives 321."
      },
      {
        "input": "x = -123",
        "output": "-321",
        "explanation": "Reversing -123 gives -321."
      },
      {
        "input": "x = 120",
        "output": "21",
        "explanation": "Reversing 120 gives 21, as the leading zeros are dropped."
      },
      {
        "input": "x = 1534236469",
        "output": "0",
        "explanation": "Reversing 1534236469 causes overflow, so we return 0."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider how to handle leading zeros in the reversed number.",
      "Think about how you can detect overflow when reversing."
    ],
    "company": "Tech Mahindra"
  },
  {
    "question_id": "",
    "title": "Two Sum",
    "description": "Given an array of integers nums and an integer target, return the indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order.",
    "topic": "Array",
    "subtopic": "Hash Map",
    "tags": [
      "Array",
      "Hash Map",
      "Two Pointers"
    ],
    "input_format": "An array of integers nums and an integer target.",
    "output_format": "A list of two integers representing the indices of the two numbers.",
    "constraints": [
      "2 <= nums.length <= 10^4",
      "-10^9 <= nums[i] <= 10^9",
      "-10^9 <= target <= 10^9",
      "Only one valid answer exists."
    ],
    "examples": [
      {
        "input": "nums = [2, 7, 11, 15], target = 9",
        "output": "[0, 1]",
        "explanation": "nums[0] + nums[1] = 2 + 7 = 9."
      },
      {
        "input": "nums = [3, 2, 4], target = 6",
        "output": "[1, 2]",
        "explanation": "nums[1] + nums[2] = 2 + 4 = 6."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use a hash map to store the difference needed to reach the target."
    ],
    "company": "Tech Mahindra"
  },
  {
    "question_id": "",
    "title": "Valid Anagram",
    "description": "Given two strings `s` and `t`, return true if `t` is an anagram of `s`, and false otherwise. An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.",
    "topic": "String",
    "subtopic": "Hash Table",
    "tags": [
      "String",
      "Anagram",
      "Hash Table"
    ],
    "input_format": "Two strings `s` and `t` where 1 <= s.length, t.length <= 5 * 10^4.",
    "output_format": "Return a boolean value indicating if `t` is an anagram of `s`.",
    "constraints": [
      "s and t consist of lowercase English letters.",
      "s.length == t.length."
    ],
    "examples": [
      {
        "input": "s = 'anagram', t = 'nagaram'",
        "output": "true",
        "explanation": "Both strings contain the same letters in different orders."
      },
      {
        "input": "s = 'rat', t = 'car'",
        "output": "false",
        "explanation": "'rat' and 'car' do not contain the same letters."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Count the frequency of each character in both strings.",
      "Use a hash table or an array to store character counts."
    ],
    "company": "Tech Mahindra"
  },
  {
    "question_id": "",
    "title": "Count Primes",
    "description": "Given an integer n, return the number of prime numbers that are strictly less than n.",
    "topic": "Math",
    "subtopic": "Prime Numbers",
    "tags": [
      "Math",
      "Prime",
      "Counting"
    ],
    "input_format": "An integer n (0 <= n <= 5 * 10^6).",
    "output_format": "An integer representing the count of prime numbers less than n.",
    "constraints": [
      "0 <= n <= 5 * 10^6"
    ],
    "examples": [
      {
        "input": "n = 10",
        "output": "4",
        "explanation": "The prime numbers less than 10 are 2, 3, 5, and 7."
      },
      {
        "input": "n = 0",
        "output": "0",
        "explanation": "There are no prime numbers less than 0."
      },
      {
        "input": "n = 1",
        "output": "0",
        "explanation": "There are no prime numbers less than 1."
      },
      {
        "input": "n = 20",
        "output": "8",
        "explanation": "The prime numbers less than 20 are 2, 3, 5, 7, 11, 13, 17, and 19."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider using the Sieve of Eratosthenes for efficient prime counting.",
      "Remember that 0 and 1 are not prime numbers."
    ],
    "company": "Tech Mahindra"
  }
]