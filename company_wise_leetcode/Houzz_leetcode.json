[
  {
    "question_id": "",
    "title": "Remove 9",
    "description": "Given an integer array nums, your task is to remove all occurrences of the integer '9' from the array. Return a new array with the remaining elements in the same order they appeared in the original array. If the array contains no instances of '9', return the array unchanged.",
    "topic": "Array",
    "subtopic": "Filtering Elements",
    "tags": [
      "Array",
      "Filtering",
      "In-place Modification"
    ],
    "input_format": "An array of integers nums.",
    "output_format": "An array of integers containing all elements in nums except for '9'.",
    "constraints": [
      "1 <= nums.length <= 10^4",
      "-10^5 <= nums[i] <= 10^5"
    ],
    "examples": [
      {
        "input": "nums = [1, 9, 2, 3, 9, 4, 5]",
        "output": "[1, 2, 3, 4, 5]",
        "explanation": "All occurrences of '9' are removed from the array."
      },
      {
        "input": "nums = [9, 9, 9]",
        "output": "[]",
        "explanation": "The array only contains '9', so it is completely removed."
      },
      {
        "input": "nums = [1, 2, 3, 4, 5]",
        "output": "[1, 2, 3, 4, 5]",
        "explanation": "There are no occurrences of '9', so the array remains unchanged."
      }
    ],
    "difficulty": "Hard",
    "hints": [
      "Think about how you can filter elements in the array.",
      "Consider using a single pass through the array.",
      "You can opt for a list comprehension or a method to remove elements."
    ],
    "company": "Houzz"
  },
  {
    "question_id": "",
    "title": "Basic Calculator III",
    "description": "Implement a basic calculator to evaluate a string expression containing non-negative integers, '+', '-', '*', and '/' operators. The expression follows the rules of operator precedence, meaning that multiplication and division take precedence over addition and subtraction. The expression is guaranteed to be valid and will not contain any spaces.",
    "topic": "Math",
    "subtopic": "Expression Evaluation",
    "tags": [
      "Math",
      "Stack",
      "Expression",
      "Calculator"
    ],
    "input_format": "A string expression s representing the calculation to evaluate.",
    "output_format": "An integer which is the result after evaluating the expression.",
    "constraints": [
      "1 <= s.length <= 3 * 10^4",
      "s consists of digits, '+', '-', '*', and '/'",
      "The expression is guaranteed to be valid."
    ],
    "examples": [
      {
        "input": "s = '3+2*2'",
        "output": "7",
        "explanation": "2*2 is evaluated first which results in 4, and then 3+4 equals 7."
      },
      {
        "input": "s = ' 3/2 '",
        "output": "1",
        "explanation": "Integer division rounds towards zero, so 3/2 equals 1."
      },
      {
        "input": "s = ' 3+5 / 2 '",
        "output": "5",
        "explanation": "5/2 results in 2 using integer division, and then 3+2 equals 5."
      }
    ],
    "difficulty": "Hard",
    "hints": [
      "Use a stack to keep track of numbers and operators.",
      "Handle operator precedence carefully.",
      "Remember to account for integer division."
    ],
    "company": "Houzz"
  }
]