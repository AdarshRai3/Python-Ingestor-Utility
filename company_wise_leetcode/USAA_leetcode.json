[
  {
    "question_id": "",
    "title": "Reverse Vowels of a String",
    "description": "Given a string s, reverse only the vowels in the string and return it. Vowels are 'a', 'e', 'i', 'o', 'u' (both lowercase and uppercase). The other characters in the string should remain in their original positions.",
    "topic": "String",
    "subtopic": "Two Pointers",
    "tags": [
      "String",
      "Two Pointers",
      "Reversal"
    ],
    "input_format": "A string s consisting of English letters and punctuation.",
    "output_format": "A string with the vowels reversed and other characters unchanged.",
    "constraints": [
      "1 <= s.length <= 3 * 10^5",
      "s consists of printable ASCII characters."
    ],
    "examples": [
      {
        "input": "hello",
        "output": "holle",
        "explanation": "The vowels 'e' and 'o' are reversed."
      },
      {
        "input": "leetcode",
        "output": "leotcede",
        "explanation": "The vowels 'e', 'e', and 'o' are reversed."
      },
      {
        "input": "aA",
        "output": "Aa",
        "explanation": "The vowels 'a' and 'A' are reversed."
      },
      {
        "input": "xyz",
        "output": "xyz",
        "explanation": "There are no vowels to reverse."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use two pointers to locate the vowels from the beginning and the end of the string."
    ],
    "company": "USAA"
  },
  {
    "question_id": "",
    "title": "Valid Parentheses",
    "description": "Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. An input string is considered valid if the brackets are closed in the correct order. Every opening bracket must have a corresponding closing bracket of the same type.",
    "topic": "String",
    "subtopic": "Stack",
    "tags": [
      "String",
      "Stack",
      "Parentheses"
    ],
    "input_format": "A string s consisting of parentheses characters.",
    "output_format": "A boolean value indicating whether the input string is valid.",
    "constraints": [
      "1 <= s.length <= 10^4",
      "s consists of parentheses only."
    ],
    "examples": [
      {
        "input": "s = '()'",
        "output": "true",
        "explanation": "The string is valid because the parentheses are closed in the correct order."
      },
      {
        "input": "s = '()[]{}'",
        "output": "true",
        "explanation": "The string is valid as it contains multiple types of brackets correctly nested."
      },
      {
        "input": "s = '(]')",
        "output": "false",
        "explanation": "The string is invalid as the parentheses and brackets are mismatched."
      },
      {
        "input": "s = '([)]'",
        "output": "false",
        "explanation": "The string is invalid because the order of the brackets is incorrect."
      },
      {
        "input": "s = '{[]}''",
        "output": "true",
        "explanation": "The string is valid with the brackets properly nested."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use a stack to keep track of opening brackets.",
      "Check for matching brackets when encountering a closing bracket.",
      "At the end, the stack should be empty if the string is valid."
    ],
    "company": "USAA"
  }
]