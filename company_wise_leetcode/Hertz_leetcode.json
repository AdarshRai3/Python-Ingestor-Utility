[
  {
    "question_id": "",
    "title": "Decode String",
    "description": "Given an encoded string, return its decoded form. The encoding rule is: k[encoded_string], where the encoded_string inside the brackets is being repeated exactly k times. You may assume that the input string is always valid. No extra spaces are allowed in the input. For example, `3[a2[c]]` will be decoded as `accaccacc`. The characters are in the range `a-z` and `0-9` for k.",
    "topic": "String",
    "subtopic": "Decoding",
    "tags": [
      "String",
      "Stack",
      "Recursion"
    ],
    "input_format": "A single string s, representing the encoded string.",
    "output_format": "A single string that represents the decoded result.",
    "constraints": [
      "1 <= s.length <= 30",
      "s consists of lowercase English letters, digits, and square brackets.",
      "The input string is guaranteed to be a valid encoding."
    ],
    "examples": [
      {
        "input": "s = \"3[a2[c]]\"",
        "output": "accaccacc",
        "explanation": "The encoded string can be decoded as `3` times the string `a2[c]`, which translates to `acc`, resulting in `accaccacc`."
      },
      {
        "input": "s = \"2[abc]3[cd]ef\"",
        "output": "abcabccdcdcdef",
        "explanation": "The encoded string translates to `2` times `abc` followed by `3` times `cd`, and then `ef`, resulting in `abcabccdcdcdef`."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Use a stack to keep track of characters and numbers.",
      "Think about how to handle nested patterns."
    ],
    "company": "Hertz"
  },
  {
    "question_id": "",
    "title": "Brightest Position on Street",
    "description": "You are given a street represented as a 1D array of integers where each integer represents the brightness of a position on the street at that index. You need to find the position that has the highest brightness. If multiple positions have the same maximum brightness, return the first one (the lowest index).",
    "topic": "Array",
    "subtopic": "Finding Maximum",
    "tags": [
      "Array",
      "Maximum",
      "Search"
    ],
    "input_format": "An array of integers representing the brightness at each position on the street.",
    "output_format": "An integer representing the index of the brightest position.",
    "constraints": [
      "1 <= street.length <= 1000",
      "0 <= street[i] <= 10^6"
    ],
    "examples": [
      {
        "input": "street = [1, 3, 2, 3, 4, 2]",
        "output": "4",
        "explanation": "The maximum brightness is 4 at index 4."
      },
      {
        "input": "street = [2, 2, 2, 2]",
        "output": "0",
        "explanation": "All positions have the same brightness of 2, the first position (index 0) is returned."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider a linear scan of the array to find the maximum.",
      "Keep track of the index where the maximum brightness occurs."
    ],
    "company": "Hertz"
  }
]