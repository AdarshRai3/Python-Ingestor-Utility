[
  {
    "question_id": "",
    "title": "Best Time to Buy and Sell Stock",
    "description": "You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.",
    "topic": "Dynamic Programming",
    "subtopic": "Array Manipulation",
    "tags": [
      "Dynamic Programming",
      "Array",
      "Greedy"
    ],
    "input_format": "An array of integers prices representing stock prices on different days.",
    "output_format": "An integer representing the maximum profit achievable.",
    "constraints": [
      "1 <= prices.length <= 10^5",
      "0 <= prices[i] <= 10^4"
    ],
    "examples": [
      {
        "input": "prices = [7, 1, 5, 3, 6, 4]",
        "output": "5",
        "explanation": "Buy on day 2 (price = 1) and sell on day 5 (price = 6). Profit = 6 - 1 = 5."
      },
      {
        "input": "prices = [7, 6, 4, 3, 1]",
        "output": "0",
        "explanation": "In this case, no transactions are done and the max profit = 0."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Keep track of the minimum price seen so far.",
      "Calculate the potential profit at each day's price."
    ],
    "company": "Bank of America"
  },
  {
    "question_id": "",
    "title": "Valid Parentheses",
    "description": "Given a string s consisting of parentheses, determine if the input string is valid. An input string is valid if the brackets are closed in the correct order. Each opening bracket must have a corresponding closing bracket and they must be properly nested.",
    "topic": "String",
    "subtopic": "Stack",
    "tags": [
      "String",
      "Stack",
      "Validation"
    ],
    "input_format": "A string s containing only the characters '(', ')', '{', '}', '[' and ']'",
    "output_format": "Return true if the input string is valid, otherwise return false.",
    "constraints": [
      "1 <= s.length <= 10^4",
      "s consists of parentheses only."
    ],
    "examples": [
      {
        "input": "s = '()'",
        "output": "true",
        "explanation": "The string contains one opening bracket and one closing bracket, forming a valid pair."
      },
      {
        "input": "s = '()[]{}'",
        "output": "true",
        "explanation": "The brackets are properly closed in the correct order."
      },
      {
        "input": "s = '(]'",
        "output": "false",
        "explanation": "The brackets are not properly nested."
      },
      {
        "input": "s = '([{}])'",
        "output": "true",
        "explanation": "All brackets are properly nested and matched."
      },
      {
        "input": "s = ']'",
        "output": "false",
        "explanation": "A closing bracket without a matching opening bracket."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use a stack to keep track of opening brackets.",
      "Make sure to pop the stack when encountering a closing bracket.",
      "Check if the closing bracket matches the last opened bracket."
    ],
    "company": "Bank of America"
  },
  {
    "question_id": "",
    "title": "Valid Palindrome",
    "description": "Given a string s, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. A string is considered a palindrome if it reads the same forward and backward after ignoring spaces and punctuation.",
    "topic": "Strings",
    "subtopic": "String Manipulation",
    "tags": [
      "Palindrome",
      "String",
      "Two Pointers"
    ],
    "input_format": "A single string s.",
    "output_format": "A boolean value indicating whether the string is a palindrome.",
    "constraints": [
      "1 <= s.length <= 2 * 10^5",
      "s consists of printable ASCII characters."
    ],
    "examples": [
      {
        "input": "s = \"A man, a plan, a canal: Panama\"",
        "output": "true",
        "explanation": "After filtering, the string becomes 'amanaplanacanalpanama', which is a palindrome."
      },
      {
        "input": "s = \"race a car\"",
        "output": "false",
        "explanation": "After filtering, the string becomes 'raceacar', which is not a palindrome."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider using two pointers from both ends of the string.",
      "Normalize the case and remove non-alphanumeric characters."
    ],
    "company": "Bank of America"
  }
]