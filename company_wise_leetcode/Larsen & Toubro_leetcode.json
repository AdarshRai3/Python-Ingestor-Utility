[
  {
    "question_id": "",
    "title": "Find the Sum of Encrypted Integers",
    "description": "You are given an array of strings where each string represents an encrypted integer. Each encrypted integer consists of digits that may be followed by one or more alphabetic characters. For this problem, your task is to decrypt these integers by removing the alphabetic characters and then return the sum of all decrypted integers.",
    "topic": "Array",
    "subtopic": "String Manipulation",
    "tags": [
      "Array",
      "String",
      "sum"
    ],
    "input_format": "An array of strings `encrypted` where each string can contain digits and alphabetic characters.",
    "output_format": "An integer representing the sum of all decrypted integers.",
    "constraints": [
      "1 <= encrypted.length <= 10^4",
      "1 <= encrypted[i].length <= 100"
    ],
    "examples": [
      {
        "input": "encrypted = [\"123abc\", \"45xyz\", \"678\"]",
        "output": "846",
        "explanation": "The decrypted integers are 123, 45, and 678. Their sum is 123 + 45 + 678 = 846."
      },
      {
        "input": "encrypted = [\"a1b2c3\", \"d4e5f6\"]",
        "output": "21",
        "explanation": "The decrypted integers are 123 and 456. Their sum is 123 + 456 = 579."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "You can use regular expressions to remove non-digit characters.",
      "Consider using the parseInt function to convert string to integer."
    ],
    "company": "Larsen & Toubro"
  },
  {
    "question_id": "",
    "title": "Longest Strictly Increasing or Strictly Decreasing Subarray",
    "description": "Given an array of integers, find the length of the longest subarray that is either strictly increasing or strictly decreasing. A subarray is defined as a contiguous part of the array. You need to determine the maximum length of any such subarray present in the original array.",
    "topic": "Array",
    "subtopic": "Subarray",
    "tags": [
      "Array",
      "Subarray",
      "Length"
    ],
    "input_format": "An array of integers nums.",
    "output_format": "An integer representing the length of the longest strictly increasing or strictly decreasing subarray.",
    "constraints": [
      "1 <= nums.length <= 10^5",
      "-10^5 <= nums[i] <= 10^5"
    ],
    "examples": [
      {
        "input": "nums = [1, 2, 3, 2, 1, 0]",
        "output": "4",
        "explanation": "The longest decreasing subarray is [3, 2, 1, 0], which has a length of 4."
      },
      {
        "input": "nums = [5, 5, 5, 5]",
        "output": "1",
        "explanation": "All elements are the same, so the longest subarray is any single element, which has a length of 1."
      },
      {
        "input": "nums = [1, 3, 2, 4, 5, 3, 1]",
        "output": "5",
        "explanation": "The longest increasing subarray is [1, 3, 4, 5] or the longer decreasing subarray is [5, 3, 1]. Both have length 5."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Keep track of the current length of increasing or decreasing subarray.",
      "Reset the length whenever the direction changes."
    ],
    "company": "Larsen & Toubro"
  }
]