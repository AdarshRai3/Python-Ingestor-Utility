[
  {
    "question_id": "",
    "title": "Three Equal Parts",
    "description": "Given an array of binary digits (0s and 1s), determine if it can be divided into three non-empty parts with equal binary values. Each part should be represented as a leading '1', followed by any number of trailing '0's. Return the starting indices of the three parts if such a division is possible, or [-1, -1, -1] if it is not.",
    "topic": "Array",
    "subtopic": "Binary Array",
    "tags": [
      "Array",
      "Binary",
      "Partitioning"
    ],
    "input_format": "An array of integers nums, where each integer is either 0 or 1.",
    "output_format": "An array of three integers representing the starting indices of the three parts, or [-1, -1, -1] if no such division is possible.",
    "constraints": [
      "1 <= nums.length <= 3000",
      "nums[i] is either 0 or 1"
    ],
    "examples": [
      {
        "input": "nums = [1, 0, 1, 0, 1]",
        "output": "[0, 2, 4]",
        "explanation": "The array can be split into three parts: [1], [0], [1], and [1] each equal to 1."
      },
      {
        "input": "nums = [1, 1, 0, 1, 1]",
        "output": "[-1, -1, -1]",
        "explanation": "It is not possible to split this array into three equal binary values."
      }
    ],
    "difficulty": "Hard",
    "hints": [
      "Count the number of 1s in the array.",
      "If the total count of 1s is not a multiple of 3, return [-1, -1, -1]."
    ],
    "company": "Hotstar"
  },
  {
    "question_id": "",
    "title": "Number of Islands",
    "description": "Given a 2D grid consisting of '1's (land) and '0's (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.",
    "topic": "Graph",
    "subtopic": "DFS/BFS",
    "tags": [
      "Graph",
      "DFS",
      "BFS",
      "Matrix"
    ],
    "input_format": "A 2D grid of characters (either '1' or '0').",
    "output_format": "An integer representing the number of islands.",
    "constraints": [
      "m == grid.length",
      "n == grid[i].length",
      "1 <= m, n <= 300",
      "grid[i][j] is '0' or '1'."
    ],
    "examples": [
      {
        "input": "grid = [['1','1','1','1','0'],['1','1','0','0','0'],['1','1','0','1','0'],['0','0','0','1','1']]",
        "output": "3",
        "explanation": "There are three islands in the grid."
      },
      {
        "input": "grid = [['0','0','0','0','0'],['0','0','0','0','0'],['0','0','0','0','0']]",
        "output": "0",
        "explanation": "There are no islands in the grid."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider using Depth-First Search (DFS) or Breadth-First Search (BFS).",
      "Mark the visited land cells to avoid counting them multiple times."
    ],
    "company": "Hotstar"
  },
  {
    "question_id": "",
    "title": "Binary Tree Maximum Path Sum",
    "description": "Given a non-empty binary tree, find the maximum path sum. The path may start and end at any node in the tree. The path must contain at least one node and does not need to go through the root. A path sum is the sum of the values of the nodes along the path.",
    "topic": "Tree",
    "subtopic": "Binary Tree",
    "tags": [
      "Tree",
      "Binary Tree",
      "Depth First Search"
    ],
    "input_format": "A binary tree represented by its root node.",
    "output_format": "An integer representing the maximum path sum.",
    "constraints": [
      "The number of nodes in the tree is in the range [1, 3 * 10^4].",
      "-1000 <= Node.val <= 1000"
    ],
    "examples": [
      {
        "input": "root = [-10, 9, 20, null, null, 15, 7]",
        "output": "42",
        "explanation": "The maximum path sum is 15 \u2192 20 \u2192 7 = 42."
      },
      {
        "input": "root = [1, 2, 3]",
        "output": "6",
        "explanation": "The maximum path sum is 2 \u2192 1 \u2192 3 = 6."
      }
    ],
    "difficulty": "Hard",
    "hints": [
      "Consider all possible paths and their sums.",
      "Use a recursive approach to explore each node."
    ],
    "company": "Hotstar"
  }
]