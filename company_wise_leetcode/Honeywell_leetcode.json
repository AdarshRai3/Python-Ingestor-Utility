[
  {
    "question_id": "",
    "title": "Minimum Distance to the Target Element",
    "description": "Given an array of integers and a target element, return the minimum distance (i.e., the index difference) between any two occurrences of the target element in the array. If the target element does not exist in the array, return -1.",
    "topic": "Array",
    "subtopic": "Searching",
    "tags": [
      "Array",
      "Searching",
      "Distance"
    ],
    "input_format": "An array of integers nums and an integer target.",
    "output_format": "An integer representing the minimum distance between occurrences of the target element, or -1 if it does not exist.",
    "constraints": [
      "1 <= nums.length <= 10^4",
      "-10^5 <= nums[i] <= 10^5",
      "-10^5 <= target <= 10^5"
    ],
    "examples": [
      {
        "input": "nums = [1, 2, 3, 2, 4, 2], target = 2",
        "output": "2",
        "explanation": "The distance between the first and third occurrences of 2 is |1 - 3| = 2."
      },
      {
        "input": "nums = [1, 2, 3, 4, 5], target = 6",
        "output": "-1",
        "explanation": "The target element 6 does not exist in the array, so the output is -1."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use a hashmap to store the last seen index of the target element.",
      "Keep track of the minimum distance while iterating through the array."
    ],
    "company": "Honeywell"
  },
  {
    "question_id": "",
    "title": "Count Zero Request Servers",
    "description": "You are given a list of servers, each represented by a non-negative integer indicating the number of requests they have received. Your task is to write a function that counts the number of servers that have received exactly zero requests. You need to return this count as your result.",
    "topic": "Array",
    "subtopic": "Counting Elements",
    "tags": [
      "Array",
      "Counting",
      "Zero"
    ],
    "input_format": "An array of non-negative integers representing the number of requests received by each server.",
    "output_format": "An integer representing the count of servers that have received exactly zero requests.",
    "constraints": [
      "1 <= servers.length <= 1000",
      "0 <= servers[i] <= 10^4"
    ],
    "examples": [
      {
        "input": "servers = [0, 1, 2, 0, 3]",
        "output": "2",
        "explanation": "Two servers have received zero requests: the first and the fourth server."
      },
      {
        "input": "servers = [1, 2, 3, 4]",
        "output": "0",
        "explanation": "No servers received zero requests."
      },
      {
        "input": "servers = [0, 0, 0]",
        "output": "3",
        "explanation": "All three servers have received zero requests."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Iterate through the list and use a counter to keep track of zero requests."
    ],
    "company": "Honeywell"
  },
  {
    "question_id": "",
    "title": "Maximum Matrix Sum",
    "description": "Given a square matrix of integers, you can flip the signs of any of its rows or columns. Your task is to determine the maximum possible sum of the elements of the matrix after performing any number of flips. Flipping a row or column means multiplying all the elements in that row or column by -1.",
    "topic": "Matrix",
    "subtopic": "Matrix Manipulation",
    "tags": [
      "Matrix",
      "Greedy",
      "Dynamic Programming"
    ],
    "input_format": "A 2D array of integers matrix of size n x n.",
    "output_format": "An integer representing the maximum possible sum of the elements of the matrix after flips.",
    "constraints": [
      "1 <= n <= 100",
      "-100 <= matrix[i][j] <= 100"
    ],
    "examples": [
      {
        "input": "matrix = [[1, -1, 1], [-1, -1, 1], [1, 1, 1]]",
        "output": "5",
        "explanation": "Flipping the first row and second column gives the matrix [[-1, 1, -1], [1, 1, -1], [-1, -1, -1]] with a sum of 5."
      },
      {
        "input": "matrix = [[2, -2, -1], [-3, -4, -5], [1, 2, 3]]",
        "output": "13",
        "explanation": "Flipping rows and columns can lead to a maximum sum of 13."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider the impact of flipping signs on the sum.",
      "Explore greedy or dynamic programming strategies to determine optimal flips."
    ],
    "company": "Honeywell"
  },
  {
    "question_id": "",
    "title": "Two Sum",
    "description": "Given an array of integers `nums` and an integer `target`, return the indices of the two numbers such that they add up to `target`. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order.",
    "topic": "Array",
    "subtopic": "Hash Table",
    "tags": [
      "Array",
      "Hash Table",
      "Two Pointers"
    ],
    "input_format": "An integer array `nums` and an integer `target`.",
    "output_format": "An array of two integers representing the indices of the two numbers.",
    "constraints": [
      "2 <= nums.length <= 10^4",
      "-10^9 <= nums[i] <= 10^9",
      "Each input would have exactly one solution."
    ],
    "examples": [
      {
        "input": "nums = [2, 7, 11, 15], target = 9",
        "output": "[0, 1]",
        "explanation": "The numbers at indices 0 and 1 are 2 and 7, which add up to 9."
      },
      {
        "input": "nums = [3, 2, 4], target = 6",
        "output": "[1, 2]",
        "explanation": "The numbers at indices 1 and 2 are 2 and 4, which add up to 6."
      },
      {
        "input": "nums = [3, 3], target = 6",
        "output": "[0, 1]",
        "explanation": "The numbers at indices 0 and 1 are both 3, which add up to 6."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use a hash map to store the difference between the target and each number."
    ],
    "company": "Honeywell"
  }
]