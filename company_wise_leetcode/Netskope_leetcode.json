[
  {
    "question_id": "",
    "title": "Word Break",
    "description": "Given a string s and a dictionary of strings wordDict, return true if s can be segmented into a space-separated sequence of one or more dictionary words. You may assume the dictionary does not contain duplicate words.",
    "topic": "Dynamic Programming",
    "subtopic": "String Manipulation",
    "tags": [
      "Dynamic Programming",
      "String",
      "Backtracking"
    ],
    "input_format": "A string s and an array of strings wordDict.",
    "output_format": "A boolean value indicating whether the string can be segmented into dictionary words.",
    "constraints": [
      "1 <= s.length <= 300",
      "1 <= wordDict.length <= 1000",
      "1 <= wordDict[i].length <= 20",
      "s and the words in wordDict consist of only lowercase English letters.",
      "All the strings in wordDict are unique."
    ],
    "examples": [
      {
        "input": "s = 'leetcode', wordDict = ['leet', 'code']",
        "output": "true",
        "explanation": "'leetcode' can be segmented as 'leet' + 'code'."
      },
      {
        "input": "s = 'applepenapple', wordDict = ['apple', 'pen']",
        "output": "true",
        "explanation": "'applepenapple' can be segmented as 'apple' + 'pen' + 'apple'."
      },
      {
        "input": "s = 'catsandog', wordDict = ['cats', 'dog', 'sand', 'and', 'cat']",
        "output": "false",
        "explanation": "'catsandog' cannot be segmented into words from the dictionary."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider using dynamic programming to keep track of valid segments.",
      "A boolean array can help determine if the substring up to that index can be segmented."
    ],
    "company": "Netskope"
  },
  {
    "question_id": "",
    "title": "Merge Intervals",
    "description": "Given a collection of intervals, merge all overlapping intervals. The input intervals are represented as a 2D array where each interval is an array of two integers representing the start and end points. You need to return a new array of merged intervals that do not overlap.",
    "topic": "Array",
    "subtopic": "Sorting",
    "tags": [
      "Array",
      "Sorting",
      "Intervals"
    ],
    "input_format": "A 2D array 'intervals' where intervals[i] = [start_i, end_i].",
    "output_format": "A 2D array containing merged intervals.",
    "constraints": [
      "1 <= intervals.length <= 10^4",
      "intervals[i].length == 2",
      "0 <= start_i <= end_i <= 10^4"
    ],
    "examples": [
      {
        "input": "intervals = [[1,3],[2,6],[8,10],[15,18]]",
        "output": "[[1,6],[8,10],[15,18]]",
        "explanation": "The intervals [1,3] and [2,6] overlap, so they are merged into [1,6]."
      },
      {
        "input": "intervals = [[1,4],[4,5]]",
        "output": "[[1,5]]",
        "explanation": "The intervals [1,4] and [4,5] are touching, so they are merged into [1,5]."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Sort the intervals based on the starting point.",
      "Iterate through the sorted intervals and merge them when they overlap."
    ],
    "company": "Netskope"
  },
  {
    "question_id": "",
    "title": "Palindromic Substrings",
    "description": "Given a string, return the number of distinct palindromic substrings in it. A substring is palindromic if it reads the same forward and backward. For example, 'aba' and 'aa' are palindromic substrings, while 'abc' is not.",
    "topic": "String",
    "subtopic": "Dynamic Programming",
    "tags": [
      "String",
      "Dynamic Programming",
      "Palindrome"
    ],
    "input_format": "A string s of length n.",
    "output_format": "An integer representing the number of distinct palindromic substrings.",
    "constraints": [
      "1 <= n <= 1000",
      "s consists of lowercase English letters."
    ],
    "examples": [
      {
        "input": "s = 'abc'",
        "output": "3",
        "explanation": "The distinct palindromic substrings are 'a', 'b', and 'c'."
      },
      {
        "input": "s = 'aaa'",
        "output": "6",
        "explanation": "The distinct palindromic substrings are 'a', 'aa', and 'aaa'."
      },
      {
        "input": "s = 'ababa'",
        "output": "7",
        "explanation": "The distinct palindromic substrings are 'a', 'b', 'aba', 'ababa', 'aa', and '' (empty string)."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider expanding around the center of each possible substring.",
      "Use a set to track distinct palindromic substrings.",
      "Explore dynamic programming approaches to optimize your solution."
    ],
    "company": "Netskope"
  }
]