[
  {
    "question_id": "",
    "title": "Largest Palindromic Number",
    "description": "Given a string of digits, you need to find the largest palindromic number that can be formed by rearranging the digits. If there is no palindromic number that can be formed, return an empty string.",
    "topic": "String",
    "subtopic": "Permutation",
    "tags": [
      "String",
      "Palindrome",
      "Sorting"
    ],
    "input_format": "A string s representing the digits.",
    "output_format": "A string representing the largest palindromic number that can be formed.",
    "constraints": [
      "1 <= s.length <= 50",
      "s consists of digits only (0-9)."
    ],
    "examples": [
      {
        "input": "s = \"9876543210\"",
        "output": "987789",
        "explanation": "The largest palindromic number can be formed by rearranging to '987789'."
      },
      {
        "input": "s = \"123456\"",
        "output": "",
        "explanation": "No palindromic number can be formed using these digits."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "A palindromic number reads the same forwards and backwards.",
      "Count the frequency of each digit and determine how to place them."
    ],
    "company": "Bentley Systems"
  },
  {
    "question_id": "",
    "title": "Best Time to Buy and Sell Stock",
    "description": "You are given an array where each element represents the price of a stock on that day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.",
    "topic": "Array",
    "subtopic": "Dynamic Programming",
    "tags": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "input_format": "The input is an array of integers prices, where prices[i] is the price of a given stock on the ith day.",
    "output_format": "An integer representing the maximum profit possible, or 0 if no profit can be made.",
    "constraints": [
      "1 <= prices.length <= 10^5",
      "0 <= prices[i] <= 10^4"
    ],
    "examples": [
      {
        "input": "prices = [7, 1, 5, 3, 6, 4]",
        "output": "5",
        "explanation": "Buy on day 2 (price = 1) and sell on day 5 (price = 6). Profit = 6 - 1 = 5."
      },
      {
        "input": "prices = [7, 6, 4, 3, 1]",
        "output": "0",
        "explanation": "No transactions are done and the max profit = 0."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Keep track of the minimum price encountered so far.",
      "Calculate the profit at each step and update the maximum profit."
    ],
    "company": "Bentley Systems"
  }
]