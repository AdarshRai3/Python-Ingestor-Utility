[
  {
    "question_id": "",
    "title": "Strong Password Checker",
    "description": "Design a strong password checker that verifies whether a given password meets the following criteria: It must be at least 8 characters long, contain at least one lowercase letter, one uppercase letter, one digit, and one special character. Additionally, the password should not contain three repeating characters in a row (like 'aaa' or '111'). If the password is valid, return 'Strong'. If not, return a string indicating which criteria the password failed to meet.",
    "topic": "String",
    "subtopic": "Validation",
    "tags": [
      "String",
      "Validation",
      "Password"
    ],
    "input_format": "A single string representing the password to be checked.",
    "output_format": "A string indicating whether the password is 'Strong' or the reason it is invalid.",
    "constraints": [
      "1 <= password.length <= 100"
    ],
    "examples": [
      {
        "input": "password123!",
        "output": "Strong",
        "explanation": "The password meets all the requirements."
      },
      {
        "input": "12345678",
        "output": "Password must contain at least one lowercase letter, one uppercase letter, and one special character.",
        "explanation": "The password fails to meet multiple criteria."
      },
      {
        "input": "aaB1!",
        "output": "Password must be at least 8 characters long.",
        "explanation": "The password is too short."
      },
      {
        "input": "aaaA1!",
        "output": "Password must not contain three repeating characters in a row.",
        "explanation": "The password contains three repeating 'a' characters."
      }
    ],
    "difficulty": "Hard",
    "hints": [
      "Check the length of the password first.",
      "Use regular expressions to identify required character types.",
      "Iterate through the password to check for repeating characters."
    ],
    "company": "Devtron"
  },
  {
    "question_id": "",
    "title": "Reverse Words in a String III",
    "description": "Given a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order. A word is defined as a sequence of characters delimited by spaces.",
    "topic": "String",
    "subtopic": "String Manipulation",
    "tags": [
      "String",
      "Manipulation",
      "Reverse"
    ],
    "input_format": "A single string s (1 <= s.length <= 500) containing words separated by spaces.",
    "output_format": "A single string with each word reversed while maintaining the original order.",
    "constraints": [
      "1 <= s.length <= 500",
      "The input string s consists of printable ASCII characters and spaces."
    ],
    "examples": [
      {
        "input": "Let's take LeetCode contest",
        "output": "s'teL ekat edoCteeL tsetnoc",
        "explanation": "Each word in the input string is reversed: 'Let's' becomes 's'teL', 'take' becomes 'ekat', 'LeetCode' becomes 'edoCteeL', and 'contest' becomes 'tsetnoc'."
      },
      {
        "input": "Hello World",
        "output": "olleH dlroW",
        "explanation": "The words 'Hello' and 'World' are reversed individually."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider using a split function to break the string into words.",
      "You can reverse each word individually and then join them back together."
    ],
    "company": "Devtron"
  }
]