[
  {
    "question_id": "",
    "title": "Longest Substring Without Repeating Characters",
    "description": "Given a string s, find the length of the longest substring without repeating characters. A substring is a contiguous sequence of characters within the string. For example, for the input 'abcabcbb', the longest substring without repeating characters is 'abc', which has a length of 3.",
    "topic": "String",
    "subtopic": "Sliding Window",
    "tags": [
      "String",
      "Sliding Window",
      "HashMap"
    ],
    "input_format": "A string s, where 1 <= s.length <= 5 * 10^4, and s consists of English letters, digits, symbols, and spaces.",
    "output_format": "An integer representing the length of the longest substring without repeating characters.",
    "constraints": [
      "1 <= s.length <= 5 * 10^4",
      "s consists of English letters, digits, symbols, and spaces."
    ],
    "examples": [
      {
        "input": "s = 'abcabcbb'",
        "output": "3",
        "explanation": "The longest substring without repeating characters is 'abc', with a length of 3."
      },
      {
        "input": "s = 'bbbbb'",
        "output": "1",
        "explanation": "The longest substring without repeating characters is 'b', with a length of 1."
      },
      {
        "input": "s = ''",
        "output": "0",
        "explanation": "An empty string has a length of 0."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Use a sliding window technique to keep track of the longest substring.",
      "Utilize a HashMap to store characters and their indices."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Valid Parentheses",
    "description": "Given a string s consisting of just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. An input string is valid if the brackets are closed in the correct order. Every opening bracket must have a corresponding closing bracket of the same type.",
    "topic": "String",
    "subtopic": "Stack",
    "tags": [
      "String",
      "Stack",
      "Valid Parentheses"
    ],
    "input_format": "A string s containing only the characters '(', ')', '{', '}', '[' and ']' with length n.",
    "output_format": "A boolean value indicating whether the string is valid.",
    "constraints": [
      "1 <= s.length <= 10^4"
    ],
    "examples": [
      {
        "input": "s = '()'",
        "output": "true",
        "explanation": "The brackets are correctly matched."
      },
      {
        "input": "s = '()[]{}'",
        "output": "true",
        "explanation": "All brackets are correctly matched."
      },
      {
        "input": "s = '(]'",
        "output": "false",
        "explanation": "The brackets are not correctly matched."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use a stack to keep track of opening brackets.",
      "Check if the closing bracket corresponds to the most recent opening bracket."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Two Sum",
    "description": "Given an array of integers `nums` and an integer `target`, return the indices of the two numbers such that they add up to `target`. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order.",
    "topic": "Array",
    "subtopic": "Hash Table",
    "tags": [
      "Array",
      "Hash Table",
      "Two Pointers"
    ],
    "input_format": "An integer array nums and an integer target.",
    "output_format": "An array of two integers representing the indices of the two numbers that add up to target.",
    "constraints": [
      "2 <= nums.length <= 10^4",
      "-10^9 <= nums[i] <= 10^9",
      "-10^9 <= target <= 10^9"
    ],
    "examples": [
      {
        "input": "nums = [2, 7, 11, 15], target = 9",
        "output": "[0, 1]",
        "explanation": "nums[0] + nums[1] == 2 + 7 == 9, hence the indices are 0 and 1."
      },
      {
        "input": "nums = [3, 2, 4], target = 6",
        "output": "[1, 2]",
        "explanation": "nums[1] + nums[2] == 2 + 4 == 6, hence the indices are 1 and 2."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use a hash map to store the difference between the target and each number.",
      "Look for the complement of each number in the hash map."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Group Anagrams",
    "description": "Given an array of strings, group the anagrams together. You can return the answer in any order. An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.",
    "topic": "Hash Table",
    "subtopic": "Grouping",
    "tags": [
      "Hash Table",
      "String",
      "Sorting"
    ],
    "input_format": "An array of strings `strs`.",
    "output_format": "A list of lists, where each sublist contains anagrams grouped together.",
    "constraints": [
      "1 <= strs.length <= 10^4",
      "0 <= strs[i].length <= 100",
      "strs[i] consists of lowercase English letters."
    ],
    "examples": [
      {
        "input": "strs = [\"eat\", \"tea\", \"tan\", \"ate\", \"nat\", \"bat\"]",
        "output": "[[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"],[\"bat\"]]",
        "explanation": "The anagrams for 'tan' and 'nat' are grouped together, as well as the anagrams 'eat', 'tea', and 'ate'."
      },
      {
        "input": "strs = [\"\"]",
        "output": "[[\"\"]]",
        "explanation": "The input only contains an empty string, which is an anagram of itself."
      },
      {
        "input": "strs = [\"a\"]",
        "output": "[[\"a\"]]",
        "explanation": "The input contains a single letter, which is also an anagram of itself."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider sorting the characters of each string.",
      "Use a hash map to group the sorted strings."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Minimum Operations to Make a Uni-Value Grid",
    "description": "You are given a 2D grid of integers. Your task is to convert the entire grid to have the same value using the minimum number of operations. In one operation, you can choose any cell in the grid and change its value to the value of any of its immediate neighbors (up, down, left, or right). The goal is to determine the minimum number of such operations required to achieve a uni-value grid.",
    "topic": "Dynamic Programming",
    "subtopic": "Grids",
    "tags": [
      "Dynamic Programming",
      "Grids",
      "Minimum Operations"
    ],
    "input_format": "A 2D list of integers grid where grid[i][j] is the value in the cell located at row i and column j.",
    "output_format": "An integer representing the minimum number of operations needed to make all cells in the grid equal.",
    "constraints": [
      "1 <= grid.length <= 100",
      "1 <= grid[i].length <= 100",
      "-10^5 <= grid[i][j] <= 10^5"
    ],
    "examples": [
      {
        "input": "grid = [[1, 2, 2], [2, 1, 2], [2, 2, 1]]",
        "output": "4",
        "explanation": "In this case, we can change the top left '1' to '2', and the bottom right '1' to '2' in two operations. We can then change the remaining '2's by changing adjacent '1's resulting in a total of 4 operations."
      },
      {
        "input": "grid = [[1, 1], [1, 1]]",
        "output": "0",
        "explanation": "The grid already has the same value (1) in all cells, so no operations are needed."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider how you can identify the most frequent value in the grid.",
      "Think about the relationship between values in the grid and how operations can be minimized."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Longest Palindromic Substring",
    "description": "Given a string s, return the longest palindromic substring in s. A string is considered a palindrome if it reads the same forward and backward. You may assume that the input string is non-empty.",
    "topic": "String",
    "subtopic": "Dynamic Programming",
    "tags": [
      "String",
      "Dynamic Programming",
      "Palindrome"
    ],
    "input_format": "A single string s where 1 <= s.length <= 1000.",
    "output_format": "A string representing the longest palindromic substring in s.",
    "constraints": [
      "1 <= s.length <= 1000",
      "s consists of only digits and English letters."
    ],
    "examples": [
      {
        "input": "s = \"babad\"",
        "output": "\"bab\"",
        "explanation": "Although \"aba\" is also a valid answer, \"bab\" is the longest palindromic substring."
      },
      {
        "input": "s = \"cbbd\"",
        "output": "\"bb\"",
        "explanation": "The longest palindromic substring is \"bb\"."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider checking each substring for palindrome properties.",
      "Explore expanding around potential centers to find palindromes."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Valid Palindrome",
    "description": "Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring case sensitivity. A palindrome reads the same forwards and backwards. You may assume the input string is non-empty and consists only of printable ASCII characters.",
    "topic": "String",
    "subtopic": "Two Pointers",
    "tags": [
      "String",
      "Palindrome",
      "Two Pointers"
    ],
    "input_format": "A single string s consisting of printable ASCII characters.",
    "output_format": "A boolean value indicating whether the string is a palindrome.",
    "constraints": [
      "1 <= s.length <= 2 * 10^5",
      "s consists only of printable ASCII characters."
    ],
    "examples": [
      {
        "input": "s = 'A man, a plan, a canal: Panama'",
        "output": "true",
        "explanation": "Ignoring punctuation and case, the string reads 'amanaplanacanalpanama', which is a palindrome."
      },
      {
        "input": "s = 'race a car'",
        "output": "false",
        "explanation": "Ignoring punctuation and spaces, the string reads 'raceacar', which is not a palindrome."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider using two pointers to compare characters.",
      "Ignore non-alphanumeric characters and use lowercasing for comparison."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Longest Common Prefix",
    "description": "Write a function that takes an array of strings and returns the longest common prefix among the strings. If there is no common prefix, return an empty string.",
    "topic": "Strings",
    "subtopic": "String Manipulation",
    "tags": [
      "Strings",
      "Prefix",
      "Common"
    ],
    "input_format": "An array of strings strs of length n (1 <= n <= 200) where each string has a length of m (0 <= m <= 200).",
    "output_format": "A string representing the longest common prefix. Return an empty string if there is no common prefix.",
    "constraints": [
      "1 <= strs.length <= 200",
      "0 <= strs[i].length <= 200",
      "All strings consist of only lowercase English letters."
    ],
    "examples": [
      {
        "input": "strs = [\"flower\", \"flow\", \"flight\"]",
        "output": "\"fl\"",
        "explanation": "The longest common prefix among these strings is 'fl'."
      },
      {
        "input": "strs = [\"dog\", \"racecar\", \"car\"]",
        "output": "\"\"",
        "explanation": "There is no common prefix among the strings."
      },
      {
        "input": "strs = [\"apple\", \"app\", \"application\"]",
        "output": "\"app\"",
        "explanation": "The longest common prefix among these strings is 'app'."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider vertical scanning of the characters in the strings.",
      "If characters do not match at any position, stop scanning."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Valid Anagram",
    "description": "Given two strings s and t, return true if t is an anagram of s and false otherwise. An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.",
    "topic": "String",
    "subtopic": "Sorting and Hashing",
    "tags": [
      "String",
      "Hashing",
      "Sorting"
    ],
    "input_format": "Two strings s and t where 0 <= s.length, t.length <= 5 * 10^4.",
    "output_format": "A boolean value indicating whether t is an anagram of s.",
    "constraints": [
      "0 <= s.length, t.length <= 5 * 10^4",
      "s and t consist of lowercase English letters only."
    ],
    "examples": [
      {
        "input": "s = \"anagram\", t = \"nagaram\"",
        "output": "true",
        "explanation": "The string 'nagaram' is an anagram of 'anagram'."
      },
      {
        "input": "s = \"rat\", t = \"car\"",
        "output": "false",
        "explanation": "The string 'car' is not an anagram of 'rat'."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Count the frequency of each character in both strings.",
      "Use a hashmap or an array to keep track of character counts."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Merge Sorted Array",
    "description": "You are given two integer arrays, nums1 and nums2, sorted in non-decreasing order. You need to merge nums2 into nums1 as one sorted array. The merged array should be written in place inside nums1. The final sorted array should not be returned, but the first k elements of nums1 should be modified to contain the merged array. Note that nums1 has a size equal to m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a size of n.",
    "topic": "Array",
    "subtopic": "Merge",
    "tags": [
      "Array",
      "Sorting",
      "Two Pointers"
    ],
    "input_format": "Two integer arrays nums1 and nums2, along with two integers m and n, where m is the number of initialized elements in nums1, and n is the size of nums2.",
    "output_format": "There is no return value, but the first m + n elements of nums1 should be modified to contain the merged sorted array.",
    "constraints": [
      "1 <= m, n <= 200",
      "0 <= nums1.length <= m + n",
      "0 <= nums2.length <= n",
      "-10^9 <= nums1[i], nums2[i] <= 10^9"
    ],
    "examples": [
      {
        "input": "nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3",
        "output": "[1,2,2,3,5,6]",
        "explanation": "The merged array is [1,2,2,3,5,6]."
      },
      {
        "input": "nums1 = [1], m = 1, nums2 = [], n = 0",
        "output": "[1]",
        "explanation": "There are no elements in nums2, so the result is just [1]."
      },
      {
        "input": "nums1 = [0], m = 0, nums2 = [1], n = 1",
        "output": "[1]",
        "explanation": "Since m is 0, we replace nums1 with nums2, resulting in [1]."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider using two pointers to traverse nums1 and nums2 from the end."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Best Time to Buy and Sell Stock",
    "description": "You are given an array where the ith element is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.",
    "topic": "Array",
    "subtopic": "Dynamic Programming",
    "tags": [
      "Array",
      "Greedy",
      "Dynamic Programming"
    ],
    "input_format": "An array of integers prices where 0 <= prices.length <= 10^5.",
    "output_format": "An integer representing the maximum profit.",
    "constraints": [
      "0 <= prices.length <= 10^5",
      "0 <= prices[i] <= 10^4"
    ],
    "examples": [
      {
        "input": "prices = [7, 1, 5, 3, 6, 4]",
        "output": "5",
        "explanation": "Buy on day 2 (price = 1) and sell on day 5 (price = 6). Profit = 6 - 1 = 5."
      },
      {
        "input": "prices = [7, 6, 4, 3, 1]",
        "output": "0",
        "explanation": "In this case, no transactions are done and the max profit = 0."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Keep track of the minimum price seen so far.",
      "Calculate the potential profit by selling at the current price and update the maximum profit if this is higher."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Merge Two Sorted Lists",
    "description": "You are given the heads of two sorted linked lists, list1 and list2. Merge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists. Return the head of the merged linked list.",
    "topic": "Linked List",
    "subtopic": "Merging",
    "tags": [
      "Linked List",
      "Merge",
      "Sorting"
    ],
    "input_format": "Two linked lists represented by the head nodes list1 and list2.",
    "output_format": "A linked list representing the merged sorted list.",
    "constraints": [
      "The number of nodes in both lists is in the range [0, 50].",
      "-100 <= Node.val <= 100",
      "Both list1 and list2 are sorted in non-decreasing order."
    ],
    "examples": [
      {
        "input": "list1 = [1, 2, 4], list2 = [1, 3, 4]",
        "output": "[1, 1, 2, 3, 4, 4]",
        "explanation": "The merged list is 1 -> 1 -> 2 -> 3 -> 4 -> 4."
      },
      {
        "input": "list1 = [], list2 = [0]",
        "output": "[0]",
        "explanation": "The merged list consists only of the single element from list2."
      },
      {
        "input": "list1 = [], list2 = []",
        "output": "[]",
        "explanation": "Both lists are empty, so the merged list is also empty."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use a dummy node to simplify the merging process.",
      "Keep track of the last node in the merged list.",
      "Iterate through both lists and compare their nodes."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Trapping Rain Water",
    "description": "Given an array of non-negative integers representing the height of bars in a histogram, compute how much water it can trap after raining.",
    "topic": "Dynamic Programming",
    "subtopic": "Two Pointer Technique",
    "tags": [
      "Array",
      "Two Pointers",
      "Dynamic Programming"
    ],
    "input_format": "An array of non-negative integers height representing the heights of bars.",
    "output_format": "An integer representing the total amount of trapped rainwater.",
    "constraints": [
      "1 <= height.length <= 2 * 10^4",
      "0 <= height[i] <= 10^5"
    ],
    "examples": [
      {
        "input": "height = [0,1,0,2,1,0,1,3,2,1,2,1]",
        "output": "6",
        "explanation": "The water can be trapped between the heights 1 and 2, resulting in 6 units of water."
      },
      {
        "input": "height = [4,2,0,3,2,5]",
        "output": "9",
        "explanation": "The water can be trapped as follows: between 4 and 3 (2), between 3 and 5 (5), summing up to 9 units."
      }
    ],
    "difficulty": "Hard",
    "hints": [
      "Consider using two pointers to keep track of the maximum height from both ends.",
      "Use a variable to store the current water level based on the lesser of the two maximum heights."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Two Sum II - Input Array Is Sorted",
    "description": "Given a 1-indexed array of integers numbers that is already sorted in non-decreasing order, find two numbers such that they add up to a specific target number. Return the indices of the two numbers in a 1-indexed format. You may assume that each input would have exactly one solution and you may not use the same element twice. Your solution should be fast and efficient.",
    "topic": "Array",
    "subtopic": "Two Pointers",
    "tags": [
      "Array",
      "Two Pointers",
      "Binary Search"
    ],
    "input_format": "An array of integers numbers and an integer target.",
    "output_format": "A list of two integers representing the indices of the two numbers, in 1-indexed format.",
    "constraints": [
      "2 <= numbers.length <= 3 * 10^4",
      "1 <= numbers[i] <= 10^4",
      "numbers is sorted in increasing order.",
      "1 <= target <= 10^4"
    ],
    "examples": [
      {
        "input": "numbers = [2, 7, 11, 15], target = 9",
        "output": "[1, 2]",
        "explanation": "numbers[1] + numbers[2] = 2 + 7 = 9."
      },
      {
        "input": "numbers = [1, 2, 3, 4, 4, 9, 10], target = 8",
        "output": "[4, 5]",
        "explanation": "numbers[4] + numbers[5] = 4 + 4 = 8."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider using two pointers to traverse the array.",
      "You can start one pointer at the beginning and the other at the end of the array."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Pow(x, n)",
    "description": "Implement the function myPow(x, n), which calculates x raised to the power n (i.e., x^n). Given a base x and an exponent n, the function should return the result of raising x to the power n. The exponent can be negative, resulting in a fractional output.",
    "topic": "Mathematics",
    "subtopic": "Exponentiation",
    "tags": [
      "Math",
      "Recursion",
      "Exponentiation"
    ],
    "input_format": "Two inputs, a float x and an integer n, where x is the base and n is the exponent.",
    "output_format": "A float representing the result of x raised to the power n.",
    "constraints": [
      "-100.0 < x < 100.0",
      "-2^31 <= n <= 2^31 - 1"
    ],
    "examples": [
      {
        "input": "x = 2.0, n = 10",
        "output": "1024.0",
        "explanation": "2 raised to the power 10 is 1024."
      },
      {
        "input": "x = 2.1, n = 3",
        "output": "9.261000000000001",
        "explanation": "2.1 raised to the power 3 is approximately 9.261."
      },
      {
        "input": "x = 2.0, n = -2",
        "output": "0.25",
        "explanation": "2 raised to the power -2 is 1/(2^2), which is 1/4 = 0.25."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider breaking down the power calculation using recursive multiplication.",
      "Handle the case when n is negative by taking the reciprocal of the result for positive n."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "3Sum",
    "description": "Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i, j, and k are distinct indices, and nums[i] + nums[j] + nums[k] == 0. Notice that the solution set must not contain duplicate triplets.",
    "topic": "Array",
    "subtopic": "Two Pointers",
    "tags": [
      "Array",
      "Two Pointers",
      "Hash Table"
    ],
    "input_format": "An integer array nums of size n.",
    "output_format": "A list of lists of integers, representing the triplets that sum to zero.",
    "constraints": [
      "0 <= n <= 3000",
      "-10^5 <= nums[i] <= 10^5"
    ],
    "examples": [
      {
        "input": "nums = [-1, 0, 1, 2, -1, -4]",
        "output": "[[-1, -1, 2], [-1, 0, 1]]",
        "explanation": "The triplets that sum to zero are [-1, -1, 2] and [-1, 0, 1]."
      },
      {
        "input": "nums = []",
        "output": "[]",
        "explanation": "There are no elements, hence no triplets can be formed."
      },
      {
        "input": "nums = [0, 1, 1]",
        "output": "[]",
        "explanation": "The triplet cannot sum to zero as there are not enough distinct numbers."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Sort the array to facilitate the use of two pointers.",
      "Skip duplicates in the results to avoid duplicate triplets.",
      "Use a hash set to keep track of the unique triplets."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Isomorphic Strings",
    "description": "Given two strings s and t, determine if they are isomorphic. Two strings are isomorphic if the characters in s can be replaced to get t. All occurrences of a character must map to the same character while preserving the character order. No two characters may map to the same character.",
    "topic": "String",
    "subtopic": "Character Mapping",
    "tags": [
      "String",
      "Isomorphic",
      "Character Mapping"
    ],
    "input_format": "Two strings s and t.",
    "output_format": "A boolean value that indicates whether the strings are isomorphic.",
    "constraints": [
      "1 <= s.length <= 10^5",
      "s.length == t.length"
    ],
    "examples": [
      {
        "input": "s = \"egg\", t = \"add\"",
        "output": "true",
        "explanation": "The character 'e' maps to 'a', and 'g' maps to 'd'."
      },
      {
        "input": "s = \"foo\", t = \"add\"",
        "output": "false",
        "explanation": "The character 'o' maps to 'd', which violates the mapping."
      },
      {
        "input": "s = \"paper\", t = \"title\"",
        "output": "true",
        "explanation": "Character mapping is consistent: p -> t, a -> i, p -> t, e -> l, r -> e."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Try using two hash maps to track the mapping of characters.",
      "Check if each character in s has a corresponding character in t."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Maximum Difference Between Node and Ancestor",
    "description": "Given a binary tree, find the maximum difference between the value of any node and the value of its ancestor. An ancestor of a node is any predecessor node on the path from the root to that node. The maximum difference is defined as the maximum of the absolute differences of values between ancestor nodes and their descendants.",
    "topic": "Tree",
    "subtopic": "Binary Tree",
    "tags": [
      "Tree",
      "DFS",
      "Recursion"
    ],
    "input_format": "The input consists of the root node of a binary tree, where each node contains an integer value.",
    "output_format": "An integer representing the maximum difference between any node and its ancestor.",
    "constraints": [
      "The binary tree has at most 1000 nodes.",
      "Each node's value is between -10000 and 10000."
    ],
    "examples": [
      {
        "input": "root = [8, 3, 10, 1, 6, null, 14, null, null, 4, 7, 13]",
        "output": "7",
        "explanation": "The maximum difference is between node 14 (ancestor) and node 7 (descendant), which is |14 - 7| = 7."
      },
      {
        "input": "root = [1, 2, 3]",
        "output": "2",
        "explanation": "The maximum difference is between node 3 (ancestor) and node 1 (descendant), which is |3 - 1| = 2."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider traversing the tree using DFS to explore all paths.",
      "Keep track of the minimum and maximum values encountered along the path from the root.",
      "Calculate the difference at each node to determine the maximum."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Reverse String",
    "description": "Write a function that takes a string as input and returns the string reversed. The input string is guaranteed to be non-empty.",
    "topic": "String",
    "subtopic": "Manipulation",
    "tags": [
      "String",
      "Manipulation",
      "Reverse"
    ],
    "input_format": "A string s of length n (1 <= n <= 1000).",
    "output_format": "A string representing the reversed version of the input string.",
    "constraints": [
      "1 <= s.length <= 1000"
    ],
    "examples": [
      {
        "input": "s = 'hello'",
        "output": "'olleh'",
        "explanation": "The reverse of the string 'hello' is 'olleh'."
      },
      {
        "input": "s = 'LeetCode'",
        "output": "'edoCteeL'",
        "explanation": "The reverse of the string 'LeetCode' is 'edoCteeL'."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider using two pointers to reverse the string in place."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Reverse Linked List II",
    "description": "Given the head of a singly linked list and two integers left and right, reverse the nodes of the list from position left to position right, and return the modified list.",
    "topic": "Linked List",
    "subtopic": "Reversing Linked List",
    "tags": [
      "Linked List",
      "Reversal",
      "Two Pointers"
    ],
    "input_format": "The input consists of a linked list head and two integers left and right, where 1 <= left <= right <= length of the list.",
    "output_format": "Return the head of the modified linked list.",
    "constraints": [
      "The number of nodes in the list is in the range [1, 5000].",
      "1 <= Node.val <= 1000"
    ],
    "examples": [
      {
        "input": "head = [1, 2, 3, 4, 5], left = 2, right = 4",
        "output": "[1, 4, 3, 2, 5]",
        "explanation": "The segment of the list from position 2 to 4 (2->3->4) is reversed to (4->3->2)."
      },
      {
        "input": "head = [1, 2, 3, 4, 5], left = 1, right = 5",
        "output": "[5, 4, 3, 2, 1]",
        "explanation": "The entire list is reversed."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Use a dummy node to simplify the edge cases.",
      "Keep track of the previous node to reconnect after reversal.",
      "You can use a loop to reverse the required segment."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Rotate Array",
    "description": "Given an array of integers and a number k, rotate the array to the right by k steps, where k is non-negative. Do this in-place with O(1) extra space.",
    "topic": "Array",
    "subtopic": "In-place Algorithms",
    "tags": [
      "Array",
      "Rotation",
      "In-place"
    ],
    "input_format": "An integer array nums and an integer k.",
    "output_format": "The rotated array as an integer array.",
    "constraints": [
      "1 <= nums.length <= 10^5",
      "0 <= k <= 10^5",
      "-10^9 <= nums[i] <= 10^9"
    ],
    "examples": [
      {
        "input": "nums = [1, 2, 3, 4, 5, 6, 7], k = 3",
        "output": "[5, 6, 7, 1, 2, 3, 4]",
        "explanation": "After rotating the array to the right by 3 steps, the elements are shifted 3 positions to the right."
      },
      {
        "input": "nums = [-1, -100, 3, 99], k = 2",
        "output": "[3, 99, -1, -100]",
        "explanation": "After rotating the array to the right by 2 steps, the last two elements come to the front."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider reversing sections of the array.",
      "Use the modulus operator to handle cases where k is larger than the array length."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "First Missing Positive",
    "description": "Given an unsorted integer array nums, find the smallest missing positive integer. Your algorithm should run in O(n) time and use constant space.",
    "topic": "Array",
    "subtopic": "Sorting",
    "tags": [
      "Array",
      "Sorting",
      "Hashing"
    ],
    "input_format": "An array of integers nums.",
    "output_format": "An integer representing the smallest missing positive integer.",
    "constraints": [
      "1 <= nums.length <= 10^5",
      "-10^5 <= nums[i] <= 10^5"
    ],
    "examples": [
      {
        "input": "nums = [3, 4, -1, 1]",
        "output": "2",
        "explanation": "The smallest missing positive integer is 2."
      },
      {
        "input": "nums = [1, 2, 0]",
        "output": "3",
        "explanation": "The smallest missing positive integer is 3."
      },
      {
        "input": "nums = [7, 8, 9, 11, 12]",
        "output": "1",
        "explanation": "The smallest missing positive integer is 1."
      }
    ],
    "difficulty": "Hard",
    "hints": [
      "Consider using the indices of the array itself to track the positive integers.",
      "You can ignore numbers that are less than 1 or greater than the length of the array."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Duplicate Emails",
    "description": "You are given a table 'Users' with two columns, 'Id' and 'Email'. Write a SQL query to find all duplicate emails in the table. An email is considered duplicate if it appears more than once in the table.",
    "topic": "SQL",
    "subtopic": "Aggregation",
    "tags": [
      "SQL",
      "Duplicate",
      "Aggregation"
    ],
    "input_format": "A SQL table named 'Users' with columns 'Id' (integer) and 'Email' (varchar).",
    "output_format": "A list of duplicate emails in ascending order.",
    "constraints": [
      "The 'Users' table contains at most 1000 rows.",
      "'Email' is a string of length at most 255."
    ],
    "examples": [
      {
        "input": "SELECT 'Email' FROM Users GROUP BY Email HAVING COUNT(Email) > 1;",
        "output": "['a@example.com', 'b@example.com']",
        "explanation": "Assuming the table contains the rows (1, 'a@example.com'), (2, 'b@example.com'), (3, 'a@example.com'), (4, 'b@example.com'), the duplicates are 'a@example.com' and 'b@example.com'."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider using GROUP BY to group the emails.",
      "Use HAVING clause to filter the groups with a count greater than 1."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "First Unique Character in a String",
    "description": "Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.",
    "topic": "String",
    "subtopic": "Character Frequency",
    "tags": [
      "String",
      "HashMap",
      "Frequency"
    ],
    "input_format": "A single string s consisting of lowercase English letters and/or whitespace.",
    "output_format": "An integer representing the index of the first non-repeating character, or -1 if there is no such character.",
    "constraints": [
      "1 <= s.length <= 10^5",
      "s consists of only lowercase English letters and/or whitespace."
    ],
    "examples": [
      {
        "input": "s = \"leetcode\"",
        "output": "0",
        "explanation": "The first non-repeating character is 'l' at index 0."
      },
      {
        "input": "s = \"loveleetcode\"",
        "output": "2",
        "explanation": "The first non-repeating character is 'v' at index 2."
      },
      {
        "input": "s = \"aabb\"",
        "output": "-1",
        "explanation": "There are no non-repeating characters in the string."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use a hash map to count the frequency of each character.",
      "Iterate through the string to find the first character with a frequency of 1."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Running Sum of 1d Array",
    "description": "Given an array of integers nums, return an array representing the running sum of nums. The running sum of nums is defined as the cumulative sum of elements from the beginning of the array to the current index. That is, runningSum[i] = sum(nums[0]...nums[i]).",
    "topic": "Array",
    "subtopic": "Prefix Sum",
    "tags": [
      "Array",
      "Prefix Sum"
    ],
    "input_format": "An array of integers nums.",
    "output_format": "An array of integers representing the running sum of the input array.",
    "constraints": [
      "1 <= nums.length <= 10^3",
      "-10^6 <= nums[i] <= 10^6"
    ],
    "examples": [
      {
        "input": "nums = [1, 2, 3, 4]",
        "output": "[1, 3, 6, 10]",
        "explanation": "The running sum is calculated as follows: [1], [1+2=3], [1+2+3=6], [1+2+3+4=10]."
      },
      {
        "input": "nums = [3, 1, 2, 10, 1]",
        "output": "[3, 4, 6, 16, 17]",
        "explanation": "The running sum is calculated as follows: [3], [3+1=4], [3+1+2=6], [3+1+2+10=16], [3+1+2+10+1=17]."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use a loop to calculate the cumulative sum.",
      "You can update the current index based on the previous running sum."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Merge Intervals",
    "description": "Given a collection of intervals, merge all overlapping intervals. An interval is represented as a pair of integers [start, end]. If two intervals overlap, you need to combine them into one. The resulting intervals should be returned in sorted order based on their starting values.",
    "topic": "Array",
    "subtopic": "Sorting",
    "tags": [
      "Array",
      "Sorting",
      "Intervals"
    ],
    "input_format": "A list of intervals, where each interval is represented as a list of two integers [start, end].",
    "output_format": "A list of merged intervals in the form of lists of two integers [start, end].",
    "constraints": [
      "1 <= intervals.length <= 10^4",
      "intervals[i].length == 2",
      "-10^4 <= intervals[i][0] <= intervals[i][1] <= 10^4"
    ],
    "examples": [
      {
        "input": "intervals = [[1,3],[2,6],[8,10],[15,18]]",
        "output": "[[1,6],[8,10],[15,18]]",
        "explanation": "The intervals [1,3] and [2,6] overlap, so they are merged into [1,6]. The intervals [8,10] and [15,18] remain unchanged."
      },
      {
        "input": "intervals = [[1,4],[4,5]]",
        "output": "[[1,5]]",
        "explanation": "The intervals [1,4] and [4,5] overlap at 4, so they are merged into [1,5]."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Sort the intervals based on the starting values.",
      "Use a stack or similar structure to keep track of merged intervals."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "String Compression",
    "description": "Given a string consisting of uppercase and lowercase letters as well as digits, your task is to compress the string using the counts of repeated characters. The resulting compressed string should be formed by appending each character followed by the number of times it appears consecutively. If the compressed string is not smaller than the original string, return the original string. Follow the rules strictly for the output format.",
    "topic": "String",
    "subtopic": "Compression",
    "tags": [
      "String",
      "Compression",
      "Algorithm"
    ],
    "input_format": "A single string s consisting of uppercase and lowercase letters and digits.",
    "output_format": "A string representing the compressed version of the input string or the original string if compressed version is not smaller.",
    "constraints": [
      "1 <= s.length <= 1000",
      "s consists of upper/lowercase letters and digits."
    ],
    "examples": [
      {
        "input": "aabcccccaaa",
        "output": "a2b1c5a3",
        "explanation": "The compressed form is a2 (two 'a's), b1 (one 'b'), c5 (five 'c's), a3 (three 'a's)."
      },
      {
        "input": "abbccd",
        "output": "abbccd",
        "explanation": "The compressed version 'a1b2c2d1' would be longer than the original string."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Keep track of the current character and its count as you traverse the string.",
      "Use a StringBuilder for efficient string concatenation."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Top K Frequent Elements",
    "description": "Given a non-empty array of integers, return the k most frequent elements. You may assume that the answer is unique, and order of output does not matter. Implement an efficient algorithm to find the result.",
    "topic": "Hash Table",
    "subtopic": "Frequency Count",
    "tags": [
      "HashTable",
      "Frequency",
      "Sorting"
    ],
    "input_format": "An array of integers `nums` and an integer `k` representing the number of top elements.",
    "output_format": "An array of the `k` most frequent elements.",
    "constraints": [
      "1 <= nums.length <= 10^5",
      "0 <= nums[i] <= 10^4",
      "1 <= k <= the number of unique elements in the array"
    ],
    "examples": [
      {
        "input": "nums = [1,1,1,2,2,3], k = 2",
        "output": "[1, 2]",
        "explanation": "The element '1' appears 3 times and '2' appears 2 times. Therefore, the top 2 frequent elements are 1 and 2."
      },
      {
        "input": "nums = [1], k = 1",
        "output": "[1]",
        "explanation": "In this case, there is only one element, which is also the top frequent element."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Use a hash map to count the frequency of each element.",
      "Consider using a priority queue to efficiently retrieve the top k elements."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Binary Search",
    "description": "Given a sorted array of integers, write a function to search for a specific target value. If the target exists in the array, return its index. Otherwise, return -1. You must write an algorithm with O(log n) runtime complexity.",
    "topic": "Search",
    "subtopic": "Binary Search",
    "tags": [
      "Array",
      "Search",
      "Binary Search"
    ],
    "input_format": "An array of integers 'nums' sorted in ascending order and an integer 'target'.",
    "output_format": "An integer representing the index of 'target' in 'nums', or -1 if 'target' is not present.",
    "constraints": [
      "1 <= nums.length <= 10^4",
      "-10^4 <= nums[i] <= 10^4",
      "nums is sorted in ascending order."
    ],
    "examples": [
      {
        "input": "nums = [1, 2, 3, 4, 5], target = 3",
        "output": "2",
        "explanation": "The target value 3 is located at index 2 in the array."
      },
      {
        "input": "nums = [1, 2, 3, 4, 5], target = 6",
        "output": "-1",
        "explanation": "The target value 6 is not present in the array, so the output is -1."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider the middle element of the array to narrow down the search.",
      "If the middle element is less than the target, search in the right half.",
      "If it's more, search in the left half."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "House Robber",
    "description": "You are a professional robber planning to steal houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from stealing from two houses next to each other is that adjacent houses have security systems connected. If two adjacent houses were broken into, their alarms would automatically trigger. Determine the maximum amount of money you can rob tonight without triggering any alarms.",
    "topic": "Dynamic Programming",
    "subtopic": "1D Dynamic Programming",
    "tags": [
      "Dynamic Programming",
      "Array",
      "Greedy"
    ],
    "input_format": "An array of integers where the ith integer represents the amount of money at the ith house.",
    "output_format": "An integer representing the maximum amount of money that can be robbed.",
    "constraints": [
      "0 <= nums.length <= 100",
      "0 <= nums[i] <= 400"
    ],
    "examples": [
      {
        "input": "nums = [2, 7, 9, 3, 1]",
        "output": "12",
        "explanation": "Robbing houses 1, 3, and 5 gives a maximum of 2 + 9 + 1 = 12."
      },
      {
        "input": "nums = [1, 2, 3, 1]",
        "output": "4",
        "explanation": "Robbing houses 1 and 3 gives a maximum of 1 + 3 = 4."
      },
      {
        "input": "nums = [10, 1, 2, 5, 4, 9, 3]",
        "output": "30",
        "explanation": "Robbing houses 1, 4, and 6 gives a maximum of 10 + 5 + 9 + 4 + 2 = 30."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider using dynamic programming to keep track of the maximum money you can rob up to each house.",
      "Think about the relationship between robbing the current house and the previous ones."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Longest Consecutive Sequence",
    "description": "Given an unsorted array of integers, find the length of the longest consecutive elements sequence. Your algorithm should run in O(n) complexity.",
    "topic": "Array",
    "subtopic": "Hashing",
    "tags": [
      "Array",
      "Hashing",
      "Consecutive Sequence"
    ],
    "input_format": "An unsorted array of integers nums.",
    "output_format": "An integer representing the length of the longest consecutive elements sequence.",
    "constraints": [
      "0 <= nums.length <= 10^5",
      "-10^9 <= nums[i] <= 10^9"
    ],
    "examples": [
      {
        "input": "nums = [100, 4, 200, 1, 3, 2]",
        "output": "4",
        "explanation": "The longest consecutive elements sequence is [1, 2, 3, 4]. Its length is 4."
      },
      {
        "input": "nums = [0, -1, 1]",
        "output": "3",
        "explanation": "The longest consecutive elements sequence is [-1, 0, 1]. Its length is 3."
      },
      {
        "input": "nums = []",
        "output": "0",
        "explanation": "There are no elements in the array, hence the length is 0."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Use a set to track the unique elements.",
      "Iterate through the array and determine the start of a consecutive sequence."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Reverse Integer",
    "description": "Given a 32-bit signed integer, reverse the digits of the integer. If reversing the integer causes it to go outside the range of a 32-bit signed integer, return 0. The function should handle negative numbers correctly.",
    "topic": "Math",
    "subtopic": "Number Manipulation",
    "tags": [
      "Math",
      "String",
      "Integer"
    ],
    "input_format": "An integer x, where -2^31 <= x <= 2^31 - 1.",
    "output_format": "An integer representing the reversed digits.",
    "constraints": [
      "-2^31 <= x <= 2^31 - 1"
    ],
    "examples": [
      {
        "input": "x = 123",
        "output": "321",
        "explanation": "The digits of 123 reversed are 321."
      },
      {
        "input": "x = -123",
        "output": "-321",
        "explanation": "The digits of -123 reversed are -321."
      },
      {
        "input": "x = 120",
        "output": "21",
        "explanation": "The digits of 120 reversed are 021, which is simply 21."
      },
      {
        "input": "x = 1534236469",
        "output": "0",
        "explanation": "Reversing 1534236469 results in 9646324351, which exceeds the 32-bit signed integer range."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider the effect of negative signs on the reversal.",
      "Use careful handling for overflows and underflows.",
      "Think about how to reverse a string representation of the integer."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Kth Largest Element in an Array",
    "description": "Given an integer array nums and an integer k, return the k-th largest element in the array. Note that it is the k-th largest element in the sorted order, not the k-th distinct element. You must solve it in O(n log n) time complexity or better.",
    "topic": "Array",
    "subtopic": "Sorting",
    "tags": [
      "Array",
      "Sorting",
      "Heap"
    ],
    "input_format": "An array of integers nums followed by an integer k, where 1 <= k <= nums.length.",
    "output_format": "An integer representing the k-th largest element.",
    "constraints": [
      "1 <= nums.length <= 10^5",
      "-10^4 <= nums[i] <= 10^4"
    ],
    "examples": [
      {
        "input": "nums = [3, 2, 1, 5, 6, 4], k = 2",
        "output": "5",
        "explanation": "The 2nd largest element in the array is 5."
      },
      {
        "input": "nums = [3, 2, 3, 1, 2, 4, 5, 5, 6], k = 4",
        "output": "4",
        "explanation": "The 4th largest element in the array is 4."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider using a quickselect algorithm.",
      "You can also use a max heap to keep track of the largest elements."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Partition Equal Subset Sum",
    "description": "Given a non-empty array containing only positive integers, you are to determine if it can be partitioned into two subsets such that the sum of the elements in both subsets is equal. You must solve the problem using dynamic programming based on the knapsack problem approach.",
    "topic": "Dynamic Programming",
    "subtopic": "Subset Sum",
    "tags": [
      "Dynamic Programming",
      "Subset Sum",
      "Array"
    ],
    "input_format": "An array of positive integers nums.",
    "output_format": "A boolean value: true if the array can be partitioned into two subsets with equal sum, false otherwise.",
    "constraints": [
      "1 <= nums.length <= 200",
      "1 <= nums[i] <= 100"
    ],
    "examples": [
      {
        "input": "nums = [1, 5, 11, 5]",
        "output": "true",
        "explanation": "The array can be partitioned into [1, 5, 5] and [11], both of which sum to 11."
      },
      {
        "input": "nums = [1, 2, 3, 5]",
        "output": "false",
        "explanation": "It is not possible to partition the array into subsets with equal sum."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Try to find the total sum of the array elements.",
      "If the total sum is odd, return false immediately.",
      "Use dynamic programming to keep track of achievable sums."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Managers with at Least 5 Direct Reports",
    "description": "Given a list of employees with their respective managers, determine which employees have at least 5 direct reports. Direct reports are defined as employees who are directly managed by a given manager. The input will consist of a list of tuples, where each tuple contains two elements: the employee's name and their manager's name. Return a list of managers who have at least 5 direct reports, sorted alphabetically.",
    "topic": "Graph",
    "subtopic": "Tree Traversal",
    "tags": [
      "Graph",
      "Tree",
      "Traversal",
      "Counting"
    ],
    "input_format": "A list of tuples representing (employee, manager).",
    "output_format": "A list of strings representing the names of managers with at least 5 direct reports, sorted alphabetically.",
    "constraints": [
      "1 <= employees.length <= 10^4",
      "Each employee and manager's name is a non-empty string with at most 100 characters."
    ],
    "examples": [
      {
        "input": "[('Alice', 'Bob'), ('Charlie', 'Bob'), ('David', 'Bob'), ('Eve', 'Bob'), ('Frank', 'Bob'), ('Grace', 'Charlie')]",
        "output": "['Bob']",
        "explanation": "Bob is the only manager with 5 direct reports: Alice, Charlie, David, Eve, and Frank."
      },
      {
        "input": "[('Alice', 'Bob'), ('Charlie', 'Bob'), ('David', 'Bob'), ('Eve', 'Charlie'), ('Frank', 'Charlie'), ('Grace', 'Charlie')]",
        "output": "['Charlie']",
        "explanation": "Charlie has 3 direct reports: Eve, Frank, and Grace, while Bob only has 2 direct reports."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Use a dictionary to count the number of direct reports for each manager.",
      "Sort the final list of managers before returning."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Add Two Numbers",
    "description": "You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return it as a linked list.",
    "topic": "Linked List",
    "subtopic": "Addition",
    "tags": [
      "Linked List",
      "Mathematics",
      "Addition"
    ],
    "input_format": "Two linked lists representing non-negative integers.",
    "output_format": "A linked list representing the sum of the two numbers.",
    "constraints": [
      "The number of nodes in each linked list is in the range [1, 100].",
      "0 <= Node.val <= 9",
      "It is guaranteed that the result will not exceed the maximum value of a 32-bit integer."
    ],
    "examples": [
      {
        "input": "l1 = [2, 4, 3], l2 = [5, 6, 4]",
        "output": "[7, 0, 8]",
        "explanation": "342 + 465 = 807. Thus, the linked list representing 807 is [7, 0, 8]."
      },
      {
        "input": "l1 = [0], l2 = [0]",
        "output": "[0]",
        "explanation": "0 + 0 = 0. Thus, the result is [0]."
      },
      {
        "input": "l1 = [9, 9, 9, 9, 9, 9, 9], l2 = [9, 9, 9, 9]",
        "output": "[8, 9, 9, 9, 0, 0, 1]",
        "explanation": "9999999 + 9999 = 10009998. Thus, the result is [8, 9, 9, 9, 0, 0, 1]."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "You might want to consider using a carry variable.",
      "Think about how you would add two digits and carry over."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Remove Duplicates from Sorted Array",
    "description": "Given a sorted array of integers, you need to remove the duplicates in-place such that each element appears only once and returns the new length of the modified array. Do not allocate extra space for another array, you must do this by modifying the input array in-place.",
    "topic": "Array",
    "subtopic": "Two Pointers",
    "tags": [
      "Array",
      "Two Pointers",
      "In-place"
    ],
    "input_format": "An integer array nums sorted in non-decreasing order.",
    "output_format": "Return the new length of the array after duplicates have been removed.",
    "constraints": [
      "1 <= nums.length <= 10^4",
      "-10^4 <= nums[i] <= 10^4",
      "The array is sorted in non-decreasing order."
    ],
    "examples": [
      {
        "input": "nums = [1, 1, 2]",
        "output": "2",
        "explanation": "The modified array is [1, 2], and the length is 2."
      },
      {
        "input": "nums = [0,0,1,1,1,2,2,3,3,4]",
        "output": "5",
        "explanation": "The modified array is [0, 1, 2, 3, 4], and the length is 5."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use two pointers to track the unique elements.",
      "Only modify the elements in the original array."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Coin Change",
    "description": "You are given an integer array coins representing coins of different denominations and an integer amount representing a total amount of money. You want to compute the minimum number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1.",
    "topic": "Dynamic Programming",
    "subtopic": "Optimal Substructure",
    "tags": [
      "Dynamic Programming",
      "Greedy",
      "Coin Change"
    ],
    "input_format": "An integer array coins representing coin denominations and an integer amount representing the total amount.",
    "output_format": "An integer representing the minimum number of coins needed to make up the amount, or -1 if it is not possible.",
    "constraints": [
      "1 <= coins.length <= 12",
      "1 <= coins[i] <= 2^31 - 1",
      "0 <= amount <= 104"
    ],
    "examples": [
      {
        "input": "coins = [1, 2, 5], amount = 11",
        "output": "3",
        "explanation": "11 can be made with two 5s and one 1: 5 + 5 + 1 = 11."
      },
      {
        "input": "coins = [2], amount = 3",
        "output": "-1",
        "explanation": "3 cannot be made with only a coin of denomination 2."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Try to use a dynamic programming array to store the minimum coins needed for each amount.",
      "Start from 0 up to the amount and fill the DP array based on previous results."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Ugly Number II",
    "description": "An ugly number is a positive number whose prime factors only include 2, 3, and 5. Write a program to find the nth ugly number. For example, if n is 10, then the 10th ugly number is 12 (since the sequence of ugly numbers is 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, ...).",
    "topic": "Dynamic Programming",
    "subtopic": "Heap / Priority Queue",
    "tags": [
      "Dynamic Programming",
      "Heap",
      "Priority Queue"
    ],
    "input_format": "A single integer n (1 <= n <= 1690), representing the position in the sequence of ugly numbers.",
    "output_format": "An integer representing the nth ugly number.",
    "constraints": [
      "1 <= n <= 1690"
    ],
    "examples": [
      {
        "input": "n = 10",
        "output": "12",
        "explanation": "The sequence of ugly numbers starts with 1, 2, 3, 4, 5, 6, 8, 9, 10, 12. The 10th number in this sequence is 12."
      },
      {
        "input": "n = 1",
        "output": "1",
        "explanation": "The first ugly number is always 1."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider maintaining a list of ugly numbers and using a min-heap.",
      "Use factors of 2, 3, and 5 to generate the next ugly numbers."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "To Be Or Not To Be",
    "description": "You are given a string of text. Your task is to determine whether the phrase 'to be' appears in the string, regardless of case. If it does, return 'Yes', otherwise return 'No'.",
    "topic": "String",
    "subtopic": "Searching",
    "tags": [
      "String",
      "Searching",
      "Case Insensitive"
    ],
    "input_format": "A single string, which may contain various characters and spaces.",
    "output_format": "A string either 'Yes' or 'No'.",
    "constraints": [
      "1 <= text.length <= 10^5"
    ],
    "examples": [
      {
        "input": "To be, or not to be, that is the question.",
        "output": "Yes",
        "explanation": "'To be' appears in the string."
      },
      {
        "input": "That is the question.",
        "output": "No",
        "explanation": "'To be' does not appear in the string."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Check for the substring in a case-insensitive manner.",
      "You can use built-in functions to simplify the search."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Asteroid Collision",
    "description": "We have an array of integers representing asteroids in a row. For each asteroid, its absolute value represents its size, and its sign represents its direction (positive meaning right and negative meaning left). When two asteroids collide, the smaller one explodes. If both are of the same size, both are destroyed. Return the final state of the asteroids after all collisions have occurred.",
    "topic": "Array",
    "subtopic": "Stack",
    "tags": [
      "Array",
      "Stack",
      "Simulation"
    ],
    "input_format": "An array of integers representing asteroids.",
    "output_format": "An array of integers representing the asteroids' sizes and directions after all collisions.",
    "constraints": [
      "1 <= asteroids.length <= 10^4",
      "-1000 <= asteroids[i] <= 1000",
      "Asteroids in the same location (same index) do not collide."
    ],
    "examples": [
      {
        "input": "asteroids = [5, 10, -5]",
        "output": "[5, 10]",
        "explanation": "The -5 asteroid collides with 10, resulting in -5 being destroyed. The final array is [5, 10]."
      },
      {
        "input": "asteroids = [8, -8]",
        "output": "[]",
        "explanation": "The two asteroids collide and destroy each other, resulting in an empty array."
      },
      {
        "input": "asteroids = [10, 2, -5]",
        "output": "[10]",
        "explanation": "The -5 asteroid collides with 2 but remains, and 10 remains in the end."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider using a stack to handle the collisions.",
      "Iterate through the asteroids and use conditions to determine collisions.",
      "Track the state of the asteroids for efficient updates."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Linked List Cycle",
    "description": "Given a linked list, determine if it has a cycle in it. A cycle is defined as a situation where a node's next pointer points back to a previous node in the list. Implement a function that takes the head of the linked list as a parameter and returns true if there is a cycle, otherwise false.",
    "topic": "Linked List",
    "subtopic": "Cycle Detection",
    "tags": [
      "Linked List",
      "Cycle Detection",
      "Two Pointers"
    ],
    "input_format": "A ListNode head which represents the starting node of the linked list.",
    "output_format": "A boolean value, true if there is a cycle in the linked list, false otherwise.",
    "constraints": [
      "The linked list can contain up to 1000 nodes.",
      "The values of list nodes are within the range of -10^5 to 10^5."
    ],
    "examples": [
      {
        "input": "head = [3, 2, 0, -4], pos = 1",
        "output": "true",
        "explanation": "The linked list has a cycle where the tail connects to the second node (value 2)."
      },
      {
        "input": "head = [1, 2], pos = 0",
        "output": "true",
        "explanation": "The linked list has a cycle where the tail connects to the first node (value 1)."
      },
      {
        "input": "head = [1], pos = -1",
        "output": "false",
        "explanation": "The linked list does not have a cycle."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use two pointers to detect the cycle.",
      "If the fast pointer equals the slow pointer, a cycle exists."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Palindrome Number",
    "description": "Given an integer x, return true if x is a palindrome, and false otherwise. A palindrome is a number that reads the same backward as forward. For example, 121 is a palindrome while 123 is not.",
    "topic": "Math",
    "subtopic": "Number Theory",
    "tags": [
      "Math",
      "Palindrome",
      "Number Theory"
    ],
    "input_format": "An integer x.",
    "output_format": "A boolean value indicating whether x is a palindrome.",
    "constraints": [
      "-2^31 <= x <= 2^31 - 1"
    ],
    "examples": [
      {
        "input": "x = 121",
        "output": "true",
        "explanation": "121 reads the same forward and backward."
      },
      {
        "input": "x = -121",
        "output": "false",
        "explanation": "-121 reads as 121- which is not the same."
      },
      {
        "input": "x = 10",
        "output": "false",
        "explanation": "10 reads as 01, which is not the same."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider how you can reverse the digits of the number.",
      "You may want to handle negative numbers as a special case."
    ],
    "company": "EPAM Systems"
  },
  {
    "question_id": "",
    "title": "Search in Rotated Sorted Array",
    "description": "You are given a rotated sorted array `nums` (0-indexed) of unique integers, and an integer `target`. Write a function to determine if `target` is in `nums`. You must write an algorithm with O(log n) time complexity.",
    "topic": "Array",
    "subtopic": "Binary Search",
    "tags": [
      "Array",
      "Binary Search",
      "Searching"
    ],
    "input_format": "An integer array `nums` followed by an integer `target`.",
    "output_format": "A boolean value indicating whether `target` exists in `nums`.",
    "constraints": [
      "1 <= nums.length <= 5000",
      "-10^4 <= nums[i] <= 10^4",
      "All elements of nums are unique.",
      "The array is rotated at some pivot."
    ],
    "examples": [
      {
        "input": "nums = [4,5,6,7,0,1,2], target = 0",
        "output": "true",
        "explanation": "0 is present in the rotated array."
      },
      {
        "input": "nums = [4,5,6,7,0,1,2], target = 3",
        "output": "false",
        "explanation": "3 is not present in the rotated array."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider how the properties of sorted arrays apply in a rotated context.",
      "Identify which portion of the array is sorted to decide where to search."
    ],
    "company": "EPAM Systems"
  }
]