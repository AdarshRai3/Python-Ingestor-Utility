[
  {
    "question_id": "",
    "title": "Maximum Number of Balls in a Box",
    "description": "You have a number of boxes, each containing a certain number of balls. Given a non-negative integer array 'boxes' where 'boxes[i]' represents the number of balls in the i-th box, you need to find the maximum number of balls that can be obtained from any one box after allowing the retrieval of balls from any other box with at most 'k' transfers. A transfer means taking a ball from another box and putting it into the target box.",
    "topic": "Greedy",
    "subtopic": "Maximization",
    "tags": [
      "Greedy",
      "Maximization",
      "Arrays"
    ],
    "input_format": "An array of non-negative integers 'boxes', and an integer 'k'.",
    "output_format": "An integer representing the maximum number of balls that can be collected in a single box after at most 'k' transfers.",
    "constraints": [
      "1 <= boxes.length <= 1000",
      "0 <= boxes[i] <= 10000",
      "0 <= k <= 1000"
    ],
    "examples": [
      {
        "input": "boxes = [1, 2, 3], k = 1",
        "output": "4",
        "explanation": "You can take 1 ball from box 0 and put it into box 2. Now box 2 has 4 balls."
      },
      {
        "input": "boxes = [4, 1, 2], k = 2",
        "output": "7",
        "explanation": "You can take 1 ball from box 1 and 2 balls from box 2 and put them into box 0. Now box 0 has 4 + 1 + 2 = 7 balls."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider how many balls you can move into one box.",
      "The box with the maximum number of balls needs to be identified before making transfers."
    ],
    "company": "AppDynamics"
  },
  {
    "question_id": "",
    "title": "Longest Substring with At Most K Distinct Characters",
    "description": "Given a string s, find the length of the longest substring that contains at most K distinct characters. A substring is any contiguous sequence of characters within the string.",
    "topic": "String",
    "subtopic": "Sliding Window",
    "tags": [
      "String",
      "Sliding Window",
      "Substring"
    ],
    "input_format": "A string s and an integer K, where 1 <= s.length <= 10^5 and 1 <= K <= number of unique characters in s.",
    "output_format": "An integer representing the length of the longest substring with at most K distinct characters.",
    "constraints": [
      "1 <= s.length <= 10^5",
      "1 <= K <= 26"
    ],
    "examples": [
      {
        "input": "s = 'eceba', K = 2",
        "output": "3",
        "explanation": "The longest substring with at most 2 distinct characters is 'ece' which has a length of 3."
      },
      {
        "input": "s = 'aa', K = 1",
        "output": "2",
        "explanation": "The longest substring with at most 1 distinct character is 'aa' which has a length of 2."
      },
      {
        "input": "s = 'aabbcc', K = 2",
        "output": "4",
        "explanation": "The longest substring with at most 2 distinct characters can be 'aabb' or 'bbcc' which both have a length of 4."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Use a sliding window approach to maintain the substring.",
      "Keep track of the counts of characters in the current window."
    ],
    "company": "AppDynamics"
  }
]