[
  {
    "question_id": "",
    "title": "Lexicographically Minimum String After Removing Stars",
    "description": "Given a string s, you need to remove all '*' characters from the string and then return the lexicographically smallest string that can be obtained after performing this operation. A star ('*') character can be considered as a deletion of the preceding character in the string. For instance, 'a*b*c' results in 'c' as 'a' is removed by '*', and 'b' is removed by another '*'. If no characters remain in the string, return an empty string.",
    "topic": "String",
    "subtopic": "String Manipulation",
    "tags": [
      "String",
      "Manipulation",
      "Lexicographical Order"
    ],
    "input_format": "A single string s containing lowercase letters and '*' characters.",
    "output_format": "A string representing the lexicographically smallest string after removing stars.",
    "constraints": [
      "1 <= s.length <= 10^5",
      "s consists of lowercase letters and '*' characters only."
    ],
    "examples": [
      {
        "input": "leet**cod*e",
        "output": "lecoe",
        "explanation": "The two '*' characters remove the letters 't' and 'd' respectively, leading to 'lecoe'."
      },
      {
        "input": "a*b*c",
        "output": "c",
        "explanation": "The '*' characters remove the letters 'a' and 'b', resulting in only 'c'."
      },
      {
        "input": "****",
        "output": "",
        "explanation": "All characters are '*' so nothing remains."
      },
      {
        "input": "ab*c*d",
        "output": "ad",
        "explanation": "The '*' removes 'b' and 'c', leaving 'a' and 'd'."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Use a stack to keep track of characters.",
      "Iterate through the string and manage stars carefully.",
      "Consider emptying the stack when a star is encountered."
    ],
    "company": "Flexera"
  },
  {
    "question_id": "",
    "title": "Clear Digits",
    "description": "You are given an integer n. Your task is to remove all digits that are strictly less than 5 from the number. If the resulting number is empty, return 0. For example, if n = 432, the output should be 0 as all digits are less than 5.",
    "topic": "Number Manipulation",
    "subtopic": "Digit Operations",
    "tags": [
      "Integer",
      "Digits",
      "Filtering"
    ],
    "input_format": "An integer n (0 <= n <= 10^9).",
    "output_format": "An integer representing the number after filtering out digits less than 5.",
    "constraints": [
      "0 <= n <= 10^9"
    ],
    "examples": [
      {
        "input": "n = 432",
        "output": "0",
        "explanation": "All digits (4, 3, 2) are less than 5, so the result is 0."
      },
      {
        "input": "n = 56789",
        "output": "56789",
        "explanation": "All digits are 5 or greater, so the output remains the same."
      },
      {
        "input": "n = 50501",
        "output": "505",
        "explanation": "After removing digits less than 5, we keep 5, 5, and 0."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider converting the number to a string for easier digit manipulation.",
      "Check each digit and build a new number from the allowed digits."
    ],
    "company": "Flexera"
  }
]