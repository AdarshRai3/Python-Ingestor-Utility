[
  {
    "question_id": "",
    "title": "Minimum Difficulty of a Job Schedule",
    "description": "You are given a list of job difficulties, where each job has a specific difficulty rating. Your task is to schedule these jobs over a given number of days such that the maximum difficulty of any day is minimized. The jobs cannot be split across days, and each day must have at least one job. Return the minimum possible difficulty of a job schedule.",
    "topic": "Dynamic Programming",
    "subtopic": "Job Scheduling",
    "tags": [
      "Dynamic Programming",
      "Greedy",
      "Minimization"
    ],
    "input_format": "Two inputs: an array of integers representing job difficulties and an integer representing the number of days.",
    "output_format": "An integer representing the minimum possible difficulty of a job schedule.",
    "constraints": [
      "1 <= jobs.length <= 300",
      "0 <= jobs[i] <= 1000",
      "1 <= d <= jobs.length"
    ],
    "examples": [
      {
        "input": "jobs = [6, 5, 4, 3, 2, 1], d = 2",
        "output": "7",
        "explanation": "One possible schedule is: Day 1: [6, 1] and Day 2: [5, 4, 3, 2]. The maximum difficulty of each day is 7."
      },
      {
        "input": "jobs = [1, 3, 4, 10, 2], d = 2",
        "output": "15",
        "explanation": "A valid schedule could be: Day 1: [10, 4] and Day 2: [3, 2, 1]. The maximum difficulty for Day 1 is 10 and for Day 2 is 5, resulting in 15."
      }
    ],
    "difficulty": "Hard",
    "hints": [
      "Consider using dynamic programming to explore job assignments over multiple days.",
      "Think about how to divide jobs optimally to minimize the maximum difficulty."
    ],
    "company": "Turvo"
  },
  {
    "question_id": "",
    "title": "Count Good Triplets",
    "description": "Given an array of integers, a good triplet (i, j, k) is defined as follows: 0 <= i < j < k < nums.length, and nums[i] < nums[j] < nums[k]. Your task is to count the number of good triplets in the given array.",
    "topic": "Array",
    "subtopic": "Triplet Counting",
    "tags": [
      "Array",
      "Triplet",
      "Counting"
    ],
    "input_format": "An array of integers nums.",
    "output_format": "An integer representing the count of good triplets.",
    "constraints": [
      "1 <= nums.length <= 1000",
      "-1000 <= nums[i] <= 1000"
    ],
    "examples": [
      {
        "input": "nums = [1, 2, 3]",
        "output": "1",
        "explanation": "The only good triplet is (0, 1, 2) since 1 < 2 < 3."
      },
      {
        "input": "nums = [3, 1, 4, 2]",
        "output": "1",
        "explanation": "The only good triplet is (1, 2, 3) since 1 < 4 < 2 is not valid."
      },
      {
        "input": "nums = [1, 1, 1]",
        "output": "0",
        "explanation": "There are no valid triplets since all numbers are equal."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider using nested loops to check triplet conditions.",
      "Keep track of indices to ensure order."
    ],
    "company": "Turvo"
  },
  {
    "question_id": "",
    "title": "Trapping Rain Water",
    "description": "Given an array representing the elevation map where the width of each bar is 1, compute how much water it can trap after raining.",
    "topic": "Array",
    "subtopic": "Two Pointers",
    "tags": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Simulation"
    ],
    "input_format": "An array of integers height representing the elevation map.",
    "output_format": "An integer representing the total units of water trapped.",
    "constraints": [
      "0 <= height.length <= 2 * 10^4",
      "0 <= height[i] <= 10^5"
    ],
    "examples": [
      {
        "input": "height = [0,1,0,2,1,0,1,3,2,1,2,1]",
        "output": "6",
        "explanation": "The water trapped is 6 units, located between the bars at indices 2-8."
      },
      {
        "input": "height = [4,2,0,3,2,5]",
        "output": "9",
        "explanation": "The water trapped is 9 units, forming a reservoir between several bars."
      }
    ],
    "difficulty": "Hard",
    "hints": [
      "Consider the height of the tallest bars to the left and right.",
      "Use two pointers to track the boundaries."
    ],
    "company": "Turvo"
  }
]