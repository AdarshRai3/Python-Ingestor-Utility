[
  {
    "question_id": "",
    "title": "Top K Frequent Elements",
    "description": "Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order. It is guaranteed that the answer is unique, except for the order in which it appears.",
    "topic": "Hash Table",
    "subtopic": "Frequency Count",
    "tags": [
      "Hash Table",
      "Sorting",
      "Heap"
    ],
    "input_format": "An integer array nums followed by an integer k.",
    "output_format": "An array of k integers representing the k most frequent elements.",
    "constraints": [
      "1 <= nums.length <= 10^5",
      "-10^4 <= nums[i] <= 10^4",
      "k is in the range [1, the number of unique elements in the array]"
    ],
    "examples": [
      {
        "input": "nums = [1, 1, 1, 2, 2, 3], k = 2",
        "output": "[1, 2]",
        "explanation": "The element 1 appears three times and 2 appears twice. Hence, the top 2 frequent elements are 1 and 2."
      },
      {
        "input": "nums = [1], k = 1",
        "output": "[1]",
        "explanation": "Since there is only one element, it is the one that appears most frequently."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Use a hash table to count the frequency of elements.",
      "Consider using a priority queue or sorting to get the top k elements."
    ],
    "company": "Avito"
  },
  {
    "question_id": "",
    "title": "Add Two Numbers",
    "description": "You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return it as a linked list. The result should also be represented as a linked list in reverse order.",
    "topic": "Linked List",
    "subtopic": "Mathematical Operations",
    "tags": [
      "Linked List",
      "Mathematics",
      "Addition"
    ],
    "input_format": "Two linked lists l1 and l2 representing the two numbers.",
    "output_format": "A linked list representing the sum of the two numbers.",
    "constraints": [
      "The number of nodes in each linked list is in the range [1, 100].",
      "0 <= Node.val <= 9",
      "It is guaranteed that the result will not exceed 10^7."
    ],
    "examples": [
      {
        "input": "l1 = [2, 4, 3], l2 = [5, 6, 4]",
        "output": "[7, 0, 8]",
        "explanation": "342 + 465 = 807, represented as a linked list: 7 -> 0 -> 8."
      },
      {
        "input": "l1 = [0], l2 = [0]",
        "output": "[0]",
        "explanation": "0 + 0 = 0, represented as a single node linked list with value 0."
      },
      {
        "input": "l1 = [9, 9, 9], l2 = [1]",
        "output": "[0, 0, 0, 1]",
        "explanation": "999 + 1 = 1000, represented as a linked list: 0 -> 0 -> 0 -> 1."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider how to manage carries while adding the digits.",
      "You might need to create a new list node for each sum."
    ],
    "company": "Avito"
  },
  {
    "question_id": "",
    "title": "Add Strings",
    "description": "Given two non-negative integers, num1 and num2 represented as string, return their sum as a string. You must not use any built-in BigInteger library or convert the inputs to integers directly.",
    "topic": "String",
    "subtopic": "String Manipulation",
    "tags": [
      "String",
      "Math",
      "Simulation"
    ],
    "input_format": "Two non-negative integers represented as strings, num1 and num2.",
    "output_format": "A string representing the sum of the two numbers.",
    "constraints": [
      "1 <= num1.length, num2.length <= 100",
      "num1 and num2 consist of digits only.",
      "num1 and num2 do not have leading zeros."
    ],
    "examples": [
      {
        "input": "num1 = \"11\", num2 = \"123\"",
        "output": "\"134\"",
        "explanation": "The sum of 11 and 123 is 134."
      },
      {
        "input": "num1 = \"456\", num2 = \"77\"",
        "output": "\"533\"",
        "explanation": "The sum of 456 and 77 is 533."
      },
      {
        "input": "num1 = \"0\", num2 = \"0\"",
        "output": "\"0\"",
        "explanation": "The sum of 0 and 0 is 0."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider using a loop to simulate the addition process from right to left.",
      "You might need to handle carry when the sum of two digits exceeds 9."
    ],
    "company": "Avito"
  },
  {
    "question_id": "",
    "title": "Generate Parentheses",
    "description": "Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses. A well-formed parentheses is defined as every opening parenthesis has a corresponding closing parenthesis in the correct order.",
    "topic": "Backtracking",
    "subtopic": "String Generation",
    "tags": [
      "Backtracking",
      "Recursion",
      "String"
    ],
    "input_format": "An integer n, representing the number of pairs of parentheses.",
    "output_format": "A list of strings, where each string represents a combination of well-formed parentheses.",
    "constraints": [
      "1 <= n <= 8"
    ],
    "examples": [
      {
        "input": "n = 3",
        "output": "[\"((()))\", \"(()())\", \"(())()\", \"()(())\", \"()()()\"]",
        "explanation": "The valid combinations of well-formed parentheses for n = 3 are as listed in the output."
      },
      {
        "input": "n = 1",
        "output": "[\"()\"]",
        "explanation": "The only valid combination of well-formed parentheses for n = 1 is \"()\"."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Think about how many opening and closing parentheses you can use.",
      "Use recursion to build combinations step by step."
    ],
    "company": "Avito"
  },
  {
    "question_id": "",
    "title": "Merge Sorted Array",
    "description": "You are given two sorted integer arrays nums1 and nums2, where nums1 has a size of m + n and nums2 has a size of n. Initially, nums1 contains m elements and the rest of the elements are set to 0. You need to merge nums2 into nums1 as one sorted array.",
    "topic": "Array",
    "subtopic": "Merging Arrays",
    "tags": [
      "Array",
      "Sorting",
      "Merge"
    ],
    "input_format": "Two integer arrays nums1 and nums2, along with two integers m and n, representing the number of initialized elements in nums1 and the number of elements in nums2 respectively.",
    "output_format": "Return the merged sorted array nums1.",
    "constraints": [
      "0 <= m, n <= 200",
      "1 <= m + n <= 200",
      "-10^9 <= nums1[i], nums2[i] <= 10^9"
    ],
    "examples": [
      {
        "input": "nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3",
        "output": "[1,2,2,3,5,6]",
        "explanation": "After merging the two arrays, the sorted array will be [1,2,2,3,5,6]."
      },
      {
        "input": "nums1 = [1], m = 1, nums2 = [], n = 0",
        "output": "[1]",
        "explanation": "Since nums2 is empty, nums1 remains the same."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use two pointers to keep track of the current index of nums1 and nums2.",
      "Start merging from the end of nums1."
    ],
    "company": "Avito"
  },
  {
    "question_id": "",
    "title": "Add to Array-Form of Integer",
    "description": "Given a non-negative integer represented as an array-form of digits and a non-negative integer k, return the array-form of the integer num + k. The array form of an integer is an array of its digits in left to right order. For example, if the integer is 123, its array form is [1, 2, 3].",
    "topic": "Array",
    "subtopic": "Mathematics",
    "tags": [
      "Array",
      "Mathematics",
      "Addition"
    ],
    "input_format": "An array of integers nums representing the integer and a non-negative integer k.",
    "output_format": "An array of integers representing the sum of num and k in array-form.",
    "constraints": [
      "1 <= nums.length <= 1000",
      "0 <= nums[i] <= 9",
      "0 <= k <= 10^4"
    ],
    "examples": [
      {
        "input": "nums = [1, 2, 0, 0], k = 34",
        "output": "[1, 2, 0, 3, 4]",
        "explanation": "The integer represented by the array is 1200. Adding 34 gives 1234, which in array-form is [1, 2, 3, 4]."
      },
      {
        "input": "nums = [2, 7, 4], k = 181",
        "output": "[4, 5, 5]",
        "explanation": "The integer represented by the array is 274. Adding 181 gives 455, which in array-form is [4, 5, 5]."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider carrying over digits when the sum exceeds 9.",
      "Start adding from the least significant digit."
    ],
    "company": "Avito"
  },
  {
    "question_id": "",
    "title": "Two Sum",
    "description": "Given an array of integers nums and an integer target, return the indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order.",
    "topic": "Array",
    "subtopic": "Hashing",
    "tags": [
      "Array",
      "Hashing",
      "Two Pointers"
    ],
    "input_format": "An array of integers nums and an integer target.",
    "output_format": "A list of two integers representing the indices of the two numbers.",
    "constraints": [
      "2 <= nums.length <= 10^4",
      "-10^9 <= nums[i] <= 10^9",
      "target is an integer."
    ],
    "examples": [
      {
        "input": "nums = [2, 7, 11, 15], target = 9",
        "output": "[0, 1]",
        "explanation": "nums[0] + nums[1] = 2 + 7 = 9."
      },
      {
        "input": "nums = [3, 2, 4], target = 6",
        "output": "[1, 2]",
        "explanation": "nums[1] + nums[2] = 2 + 4 = 6."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use a hash map to store the indices of the numbers you've seen so far."
    ],
    "company": "Avito"
  }
]