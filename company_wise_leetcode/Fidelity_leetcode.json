[
  {
    "question_id": "",
    "title": "Modify the Matrix",
    "description": "You are given a 2D matrix of integers where each element can either be a 0 or a 1. Your task is to modify the matrix such that if an element is 0, all the elements in the same row and column must be set to 0. Return the modified matrix.",
    "topic": "Matrix",
    "subtopic": "Matrix Manipulation",
    "tags": [
      "Matrix",
      "Manipulation",
      "2D Array"
    ],
    "input_format": "A 2D list of integers representing the matrix.",
    "output_format": "The modified 2D list of integers after applying the rules.",
    "constraints": [
      "1 <= matrix.length <= 300",
      "1 <= matrix[i].length <= 300",
      "matrix[i][j] is either 0 or 1."
    ],
    "examples": [
      {
        "input": "[[1, 1, 1], [1, 0, 1], [1, 1, 1]]",
        "output": "[[1, 0, 1], [0, 0, 0], [1, 0, 1]]",
        "explanation": "The element at (1, 1) is 0, so we set all elements in row 1 and column 1 to 0."
      },
      {
        "input": "[[0, 1], [1, 1]]",
        "output": "[[0, 0], [0, 1]]",
        "explanation": "The element at (0, 0) is 0, so we set all elements in row 0 and column 0 to 0."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use two sets to keep track of rows and columns that need to be set to 0."
    ],
    "company": "Fidelity"
  },
  {
    "question_id": "",
    "title": "Two Sum",
    "description": "Given an array of integers, return the indices of the two numbers such that they add up to a specific target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order.",
    "topic": "Array",
    "subtopic": "Searching",
    "tags": [
      "Array",
      "Hash Table",
      "Searching"
    ],
    "input_format": "An array of integers nums and an integer target.",
    "output_format": "An array of two integers representing the indices of the two numbers.",
    "constraints": [
      "2 <= nums.length <= 10^4",
      "-10^9 <= nums[i] <= 10^9",
      "0 <= target <= 10^9",
      "Assume each input has exactly one solution."
    ],
    "examples": [
      {
        "input": "nums = [2, 7, 11, 15], target = 9",
        "output": "[0, 1]",
        "explanation": "nums[0] + nums[1] = 2 + 7 = 9."
      },
      {
        "input": "nums = [3, 2, 4], target = 6",
        "output": "[1, 2]",
        "explanation": "nums[1] + nums[2] = 2 + 4 = 6."
      },
      {
        "input": "nums = [3, 3], target = 6",
        "output": "[0, 1]",
        "explanation": "nums[0] + nums[1] = 3 + 3 = 6."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider using a hash table to store the indices of the elements.",
      "Iterate through the array once while checking for complements."
    ],
    "company": "Fidelity"
  },
  {
    "question_id": "",
    "title": "Valid Anagram",
    "description": "Given two strings s and t, return true if t is an anagram of s and false otherwise. An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.",
    "topic": "String",
    "subtopic": "Sorting and Hashing",
    "tags": [
      "String",
      "Hashing",
      "Sorting"
    ],
    "input_format": "Two strings s and t, where 1 <= s.length, t.length <= 5 * 10^4.",
    "output_format": "A boolean value indicating whether t is an anagram of s.",
    "constraints": [
      "s and t consist of lowercase English letters.",
      "s and t have the same length."
    ],
    "examples": [
      {
        "input": "s = 'anagram', t = 'nagaram'",
        "output": "true",
        "explanation": "Both strings contain the same letters with the same frequency."
      },
      {
        "input": "s = 'rat', t = 'car'",
        "output": "false",
        "explanation": "The letters in 'rat' cannot be rearranged to form 'car'."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Check if the sorted version of both strings are the same.",
      "Use a frequency count to compare the letters in both strings."
    ],
    "company": "Fidelity"
  }
]