[
  {
    "question_id": "",
    "title": "Find Array Given Subset Sums",
    "description": "You are given a list of integers that represent the sums of all possible subsets of an unknown array. Your task is to reconstruct the original array from these subset sums. Note that the input sums will not include the sum of the empty set, which is 0. The original array may contain duplicate elements, and you may assume that the input subset sums are valid and originate from a non-negative integer array.",
    "topic": "Array",
    "subtopic": "Subset Sums",
    "tags": [
      "Array",
      "Subset Sums",
      "Reconstruction"
    ],
    "input_format": "A list of integers representing the subset sums.",
    "output_format": "A list of integers representing the original array.",
    "constraints": [
      "1 <= sums.length <= 20",
      "0 <= sums[i] <= 10^9",
      "The input will be a valid list of subset sums."
    ],
    "examples": [
      {
        "input": "[1, 2, 3, 4, 5, 6, 7, 8, 9]",
        "output": "[1, 2, 3]",
        "explanation": "The original array can be reconstructed as [1, 2, 3], giving all possible subsets sums including the sums of the empty set."
      },
      {
        "input": "[0, 1, 1, 2, 3, 4]",
        "output": "[1]",
        "explanation": "Here the only number that can form the given subset sums is 1."
      }
    ],
    "difficulty": "Hard",
    "hints": [
      "Consider the properties of subset sums.",
      "Use a frequency count to track number occurrences.",
      "Start from the smallest subset sum and work your way up."
    ],
    "company": "Mindtickle"
  },
  {
    "question_id": "",
    "title": "Get the Maximum Score",
    "description": "You are given an array of integers representing scores of different games, and you can choose to play a certain number of games from the array. Your goal is to maximize your total score while adhering to the following rules: 1. You can play at most k games, where k is a given integer. 2. You cannot play two games with scores that are consecutive in the array. Determine the maximum score you can achieve.",
    "topic": "Dynamic Programming",
    "subtopic": "Maximum Score Subsequence",
    "tags": [
      "Dynamic Programming",
      "Greedy",
      "Array"
    ],
    "input_format": "Two inputs: an array of integers scores and an integer k.",
    "output_format": "An integer representing the maximum possible score.",
    "constraints": [
      "1 <= scores.length <= 10^5",
      "0 <= scores[i] <= 10^4",
      "1 <= k <= scores.length"
    ],
    "examples": [
      {
        "input": "scores = [3, 2, 5, 10, 7], k = 2",
        "output": "15",
        "explanation": "Choosing scores 5 and 10 gives the maximum score of 15 (you skip the game with score 2)."
      },
      {
        "input": "scores = [1, 2, 9, 4, 5], k = 2",
        "output": "10",
        "explanation": "Choosing scores 1 and 9 gives the maximum score of 10, while k limits you to 2 games."
      }
    ],
    "difficulty": "Hard",
    "hints": [
      "Consider using dynamic programming to keep track of scores.",
      "You can utilize a decision tree approach to explore different game selections."
    ],
    "company": "Mindtickle"
  },
  {
    "question_id": "",
    "title": "Number of Ways to Wear Different Hats to Each Other",
    "description": "You have a collection of different hats, and you want to determine how many unique ways you can wear these hats. Each hat can only be worn by one person at a time, and you cannot wear the same hat as another person. Given the number of hats and the number of people, compute the total number of distinct ways to assign the hats to the people, considering that any person can wear any hat, and some hats can be left unworn.",
    "topic": "Combinatorics",
    "subtopic": "Counting",
    "tags": [
      "Combinatorics",
      "Counting",
      "Permutations"
    ],
    "input_format": "Two integers, n (the number of hats) and m (the number of people).",
    "output_format": "An integer representing the total number of ways to distribute the hats.",
    "constraints": [
      "1 <= n, m <= 10^9"
    ],
    "examples": [
      {
        "input": "n = 3, m = 2",
        "output": "6",
        "explanation": "Each of the 2 people can choose any of the 3 hats, leading to 3 choices for the first person and 3 choices for the second person (3 * 3 = 9). However, since there can be variations where some hats remain unchose, the combinations boil down to 3\u00d72 = 6 unique assigning possibilities."
      },
      {
        "input": "n = 1, m = 3",
        "output": "1",
        "explanation": "Only one hat is available, hence all three people can choose to wear the same hat or no hat at all. The unique assignment possibilities here remains 1."
      }
    ],
    "difficulty": "Hard",
    "hints": [
      "Consider using the principle of multiplication for independent choices.",
      "Think about combinations and permutations involving repetitions."
    ],
    "company": "Mindtickle"
  },
  {
    "question_id": "",
    "title": "Capacity To Ship Packages Within D Days",
    "description": "You have a number of packages with different weights, and you want to ship them within a given number of days. Each day, you can choose a maximum weight limit for the packages you ship. Your task is to determine the minimum weight limit for each day, such that you can ship all packages within the specified number of days.",
    "topic": "Binary Search",
    "subtopic": "Optimization",
    "tags": [
      "Binary Search",
      "Array",
      "Optimization"
    ],
    "input_format": "An array of integers weights representing the weights of packages, and an integer D representing the number of days.",
    "output_format": "An integer representing the minimum weight limit per day.",
    "constraints": [
      "1 <= weights.length <= 5 * 10^4",
      "0 < weights[i] <= 10^4",
      "1 <= D <= weights.length"
    ],
    "examples": [
      {
        "input": "weights = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], D = 5",
        "output": "15",
        "explanation": "In this case, the optimal way to ship the packages is to ship packages with weights [1, 2, 3, 4, 5] one day, and [6, 7, 8, 9, 10] on another day, achieving the minimum weight limit of 15."
      },
      {
        "input": "weights = [3, 2, 2, 4, 1, 4], D = 3",
        "output": "6",
        "explanation": "The packages can be shipped as follows: Day 1: [3, 2, 1], Day 2: [2, 4], Day 3: [4]. Thus, the minimum weight limit is 6."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider using a binary search to determine the weight limit.",
      "The sum of weights shipped in a day should not exceed the chosen limit."
    ],
    "company": "Mindtickle"
  }
]