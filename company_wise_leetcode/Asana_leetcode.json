[
  {
    "question_id": "",
    "title": "Product of Array Except Self",
    "description": "Given an integer array nums, return an array output such that output[i] is equal to the product of all the elements of nums except nums[i]. You must solve it without using division and in O(n) time complexity.",
    "topic": "Array",
    "subtopic": "Product Calculation",
    "tags": [
      "Array",
      "Product",
      "Prefix-Suffix"
    ],
    "input_format": "An array of integers nums where 2 <= nums.length <= 10^5.",
    "output_format": "An array of the same length as nums representing the product of all elements except the current element.",
    "constraints": [
      "2 <= nums.length <= 10^5",
      "-30 <= nums[i] <= 30"
    ],
    "examples": [
      {
        "input": "nums = [1, 2, 3, 4]",
        "output": "[24, 12, 8, 6]",
        "explanation": "The product of all elements except nums[0] (1) is 2 * 3 * 4 = 24. Similarly for other indices."
      },
      {
        "input": "nums = [-1, 1, 0, -3, 3]",
        "output": "[0, 0, 9, 0, 0]",
        "explanation": "The product of all elements except nums[2] (0) is -1 * 1 * -3 * 3 = 9."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider using prefix and suffix products.",
      "You can accumulate products from both ends of the array."
    ],
    "company": "Asana"
  },
  {
    "question_id": "",
    "title": "Maximum Repeating Substring",
    "description": "Given a string s, find the substring that appears the most frequently in s. The substring can be of any length greater than or equal to 1. Your task is to return the length of the maximum repeating substring. If there are multiple substrings with the same maximum frequency, return the length of any one of them.",
    "topic": "String",
    "subtopic": "Substring Search",
    "tags": [
      "String",
      "Substring",
      "Frequency"
    ],
    "input_format": "A string s consisting of lowercase English letters.",
    "output_format": "An integer representing the length of the maximum repeating substring.",
    "constraints": [
      "1 <= s.length <= 10^5",
      "s consists only of lowercase English letters."
    ],
    "examples": [
      {
        "input": "s = 'banana'",
        "output": "3",
        "explanation": "The substring 'ana' appears twice, which is the maximum frequency. Its length is 3."
      },
      {
        "input": "s = 'ababc'",
        "output": "2",
        "explanation": "The substrings 'ab' and 'ba' both appear twice. Their lengths are 2."
      },
      {
        "input": "s = 'abc'",
        "output": "1",
        "explanation": "Each character appears once, thus the maximum repeating substring can be any single character with length 1."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider using a dictionary to count frequencies of substrings.",
      "Start with shorter substrings and build up to longer ones."
    ],
    "company": "Asana"
  },
  {
    "question_id": "",
    "title": "K Closest Points to Origin",
    "description": "Given an array of points where points[i] = [xi, yi] represents a point on a 2D plane, and an integer K, return the K closest points to the origin (0, 0). The distance between two points on the 2D plane is the Euclidean distance, which is calculated as sqrt((x1 - x2)^2 + (y1 - y2)^2). You may return the answer in any order, and it is guaranteed that the answer is unique (except for the order).",
    "topic": "Sorting",
    "subtopic": "Distance Calculation",
    "tags": [
      "Array",
      "Sorting",
      "Distance"
    ],
    "input_format": "An array of points, where each point is represented as an array of two integers, and an integer K.",
    "output_format": "A list of K points, each represented as an array of two integers.",
    "constraints": [
      "1 <= K <= points.length <= 10^4",
      "-10^4 <= xi, yi <= 10^4"
    ],
    "examples": [
      {
        "input": "points = [[1,3],[-2,2],[5,8],[0,1]], K = 2",
        "output": "[[-2,2],[1,3]]",
        "explanation": "The distances from the origin are computed as follows: sqrt(1^2 + 3^2) = sqrt(10), sqrt((-2)^2 + 2^2) = sqrt(8), sqrt(5^2 + 8^2) = sqrt(89), sqrt(0^2 + 1^2) = sqrt(1). The closest two points are [-2, 2] and [1, 3]."
      },
      {
        "input": "points = [[3,3],[5,-1],[-2,4]], K = 1",
        "output": "[[3,3]]",
        "explanation": "The distance from the origin for [3, 3] is sqrt(18), for [5, -1] is sqrt(26), and for [-2, 4] is sqrt(20). The closest point to the origin is [3, 3]."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Utilize a max-heap or min-heap for efficient distance calculations.",
      "Consider using the squared distance to avoid calculating the square root."
    ],
    "company": "Asana"
  }
]