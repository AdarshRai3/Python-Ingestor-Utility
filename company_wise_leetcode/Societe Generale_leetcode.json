[
  {
    "question_id": "",
    "title": "Minimum Number of Swaps to Make the Binary String Alternating",
    "description": "Given a binary string s consisting of only '0's and '1's, you need to determine the minimum number of swaps required to make the string alternating (i.e., '010101...' or '101010...'). A swap consists of exchanging two characters at different indices. If it's impossible to create an alternating string, return -1.",
    "topic": "String",
    "subtopic": "Manipulation",
    "tags": [
      "String",
      "Greedy",
      "Counting"
    ],
    "input_format": "A binary string s of length n.",
    "output_format": "An integer representing the minimum number of swaps needed to make the string alternating, or -1 if it's impossible.",
    "constraints": [
      "1 <= n <= 10^5",
      "s consists only of '0's and '1's."
    ],
    "examples": [
      {
        "input": "s = '1100'",
        "output": "1",
        "explanation": "One swap between index 1 and index 2 can convert '1100' to '1010'."
      },
      {
        "input": "s = '1010'",
        "output": "0",
        "explanation": "'1010' is already in alternating form, so no swaps are needed."
      },
      {
        "input": "s = '000'",
        "output": "-1",
        "explanation": "It's impossible to make '000' alternating, so the output is -1."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Count the number of '0's and '1's in the string.",
      "To form an alternating string, the counts should be either equal or differ by one.",
      "Consider constructing both possible alternating strings and find the cost of conversion."
    ],
    "company": "Societe Generale"
  },
  {
    "question_id": "",
    "title": "Best Time to Buy and Sell Stock",
    "description": "You are given an array where the ith element is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.",
    "topic": "Dynamic Programming",
    "subtopic": "One-Dimensional Dynamic Programming",
    "tags": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "input_format": "An array of integers prices, where 0 <= prices.length <= 10^5.",
    "output_format": "An integer representing the maximum profit you can achieve.",
    "constraints": [
      "0 <= prices.length <= 10^5",
      "0 <= prices[i] <= 10^4"
    ],
    "examples": [
      {
        "input": "prices = [7, 1, 5, 3, 6, 4]",
        "output": "5",
        "explanation": "Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6 - 1 = 5."
      },
      {
        "input": "prices = [7, 6, 4, 3, 1]",
        "output": "0",
        "explanation": "No transactions are done and the max profit is 0."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Keep track of the minimum price seen so far.",
      "The profit is the difference between the current price and the minimum price."
    ],
    "company": "Societe Generale"
  }
]