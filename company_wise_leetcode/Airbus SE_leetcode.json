[
  {
    "question_id": "",
    "title": "Find the Number of Good Pairs II",
    "description": "Given an integer array nums, you need to determine the number of good pairs (i, j) such that i < j and nums[i] + nums[j] is even. A good pair is defined as a pair whose sum is even.",
    "topic": "Array",
    "subtopic": "Pair Counting",
    "tags": [
      "Array",
      "Pair Counting",
      "math"
    ],
    "input_format": "An array of integers nums of size n.",
    "output_format": "An integer representing the number of good pairs.",
    "constraints": [
      "1 <= nums.length <= 10^5",
      "-100 <= nums[i] <= 100"
    ],
    "examples": [
      {
        "input": "nums = [1, 2, 3, 4, 5]",
        "output": "6",
        "explanation": "The good pairs are (1, 3), (1, 5), (2, 4), (2, 2), (3, 5), (4, 2)."
      },
      {
        "input": "nums = [2, 2, 2, 2]",
        "output": "6",
        "explanation": "All pairs are good since all numbers are even."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Count the number of even and odd numbers separately.",
      "The sum of two even numbers is even, as well as the sum of two odd numbers."
    ],
    "company": "Airbus SE"
  },
  {
    "question_id": "",
    "title": "Find the Number of Good Pairs I",
    "description": "Given an integer array nums, a pair of indices (i, j) is called a good pair if nums[i] == nums[j] and i < j. Your task is to return the total number of good pairs in the array.",
    "topic": "Array",
    "subtopic": "Counting",
    "tags": [
      "Array",
      "Counting",
      "Pairs"
    ],
    "input_format": "An array of integers nums.",
    "output_format": "An integer representing the total number of good pairs.",
    "constraints": [
      "1 <= nums.length <= 100",
      "1 <= nums[i] <= 100"
    ],
    "examples": [
      {
        "input": "nums = [1, 2, 3, 1, 1, 3]",
        "output": "4",
        "explanation": "The pairs are (0, 3), (0, 4), (3, 4), and (2, 5). So there are 4 good pairs."
      },
      {
        "input": "nums = [1, 1, 1, 1]",
        "output": "6",
        "explanation": "All pairs (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), and (2, 3) are good pairs."
      },
      {
        "input": "nums = [1, 2, 3]",
        "output": "0",
        "explanation": "No pairs satisfy the condition. Hence, there are 0 good pairs."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider using a hashmap to count occurrences of each number.",
      "For a number that appears n times, the number of good pairs can be calculated using n * (n - 1) / 2."
    ],
    "company": "Airbus SE"
  },
  {
    "question_id": "",
    "title": "Minimum Array Changes to Make Differences Equal",
    "description": "You are given an array of integers. Your task is to find the minimum number of changes required to make all adjacent differences equal. A change is defined as modifying an element in the array to any other integer. Return the minimum number of changes needed.",
    "topic": "Array",
    "subtopic": "Dynamic Programming",
    "tags": [
      "Array",
      "Dynamic Programming",
      "Minimum Changes"
    ],
    "input_format": "An array of integers nums.",
    "output_format": "An integer representing the minimum number of changes required.",
    "constraints": [
      "1 <= nums.length <= 1000",
      "-10^4 <= nums[i] <= 10^4"
    ],
    "examples": [
      {
        "input": "nums = [3, 6, 9, 12]",
        "output": "0",
        "explanation": "The differences are already equal (3), so no changes are needed."
      },
      {
        "input": "nums = [1, 2, 3, 5, 7]",
        "output": "1",
        "explanation": "Changing 3 to 4 will result in equal differences of 1."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider the possibility of calculating differences between elements.",
      "Look for patterns in the differences."
    ],
    "company": "Airbus SE"
  },
  {
    "question_id": "",
    "title": "Longest Common Prefix",
    "description": "Write a function to find the longest common prefix string amongst an array of strings. If there is no common prefix, return an empty string \"\".",
    "topic": "Strings",
    "subtopic": "Prefix",
    "tags": [
      "Strings",
      "Prefix",
      "Algorithm"
    ],
    "input_format": "An array of strings strs.",
    "output_format": "A string representing the longest common prefix.",
    "constraints": [
      "0 <= strs.length <= 200",
      "0 <= strs[i].length <= 200",
      "All strings consist of only lowercase English letters."
    ],
    "examples": [
      {
        "input": "strs = [\"flower\", \"flow\", \"flight\"]",
        "output": "\"fl\"",
        "explanation": "The longest common prefix is \"fl\"."
      },
      {
        "input": "strs = [\"dog\", \"racecar\", \"car\"]",
        "output": "\"\"",
        "explanation": "There is no common prefix among these strings."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider comparing the characters of the strings one by one.",
      "Use a loop to iterate through the strings."
    ],
    "company": "Airbus SE"
  },
  {
    "question_id": "",
    "title": "Two Sum",
    "description": "Given an array of integers `nums` and an integer `target`, return the indices of the two numbers such that they add up to `target`. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order.",
    "topic": "Array",
    "subtopic": "Hash Table",
    "tags": [
      "Array",
      "Hash Table",
      "Two Pointers"
    ],
    "input_format": "An array of integers nums and an integer target.",
    "output_format": "An array of two integers representing the indices of the two numbers.",
    "constraints": [
      "2 <= nums.length <= 10^4",
      "-10^9 <= nums[i] <= 10^9",
      "-10^9 <= target <= 10^9",
      "Assume that there is exactly one solution."
    ],
    "examples": [
      {
        "input": "nums = [2, 7, 11, 15], target = 9",
        "output": "[0, 1]",
        "explanation": "nums[0] + nums[1] = 2 + 7 = 9."
      },
      {
        "input": "nums = [3, 2, 4], target = 6",
        "output": "[1, 2]",
        "explanation": "nums[1] + nums[2] = 2 + 4 = 6."
      },
      {
        "input": "nums = [3, 3], target = 6",
        "output": "[0, 1]",
        "explanation": "nums[0] + nums[1] = 3 + 3 = 6."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Use a hash map to store the difference between the target and the current number."
    ],
    "company": "Airbus SE"
  }
]