[
  {
    "question_id": "",
    "title": "Find Pivot Index",
    "description": "Given an array of integers, find the pivot index of the array. The pivot index is the index where the sum of the numbers to the left is equal to the sum of the numbers to the right. If no such index exists, return -1. The left and right sums are both 0 when the index is at the first or last element.",
    "topic": "Array",
    "subtopic": "Prefix Sums",
    "tags": [
      "Array",
      "Prefix Sums",
      "Index"
    ],
    "input_format": "An array of integers nums.",
    "output_format": "An integer representing the pivot index or -1 if no such index exists.",
    "constraints": [
      "1 <= nums.length <= 10^4",
      "-10^5 <= nums[i] <= 10^5"
    ],
    "examples": [
      {
        "input": "nums = [1, 7, 3, 6, 5, 6]",
        "output": "3",
        "explanation": "The pivot index is 3 because the sum of elements to the left is 1 + 7 + 3 = 11 and the sum of elements to the right is 5 + 6 = 11."
      },
      {
        "input": "nums = [1, 2, 3]",
        "output": "-1",
        "explanation": "There is no index that satisfies the pivot condition."
      },
      {
        "input": "nums = [2, 1, -1]",
        "output": "0",
        "explanation": "The pivot index is 0 because the sum of elements to the left is 0 and the sum of elements to the right is 1 + -1 = 0."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider using a single pass to calculate both left and right sums."
    ],
    "company": "Citigroup"
  },
  {
    "question_id": "",
    "title": "Number of Visible People in a Queue",
    "description": "In a queue of people, each individual has a height. A person can only see the person in front of them if they are taller or of the same height. Given an array of integers representing the heights of people in the queue, return an array where each index represents the number of people that can be seen from that position in the queue.",
    "topic": "Array",
    "subtopic": "Stack",
    "tags": [
      "Array",
      "Stack",
      "Visibility"
    ],
    "input_format": "An array of integers heights, where heights[i] represents the height of the i-th person in the queue.",
    "output_format": "An array of integers, where the i-th integer represents the number of visible people from the i-th position in the queue.",
    "constraints": [
      "1 <= heights.length <= 10^5",
      "1 <= heights[i] <= 10^5"
    ],
    "examples": [
      {
        "input": "heights = [1, 2, 3, 2, 1]",
        "output": "[1, 1, 1, 1, 0]",
        "explanation": "From index 0, only the person at index 1 is visible. From index 1, only the person at index 2 is visible, and so on."
      },
      {
        "input": "heights = [3, 2, 1, 3, 2, 1]",
        "output": "[2, 1, 0, 0, 0, 0]",
        "explanation": "The first person can see two people in front, the second can see one person, and the rest cannot see anyone."
      }
    ],
    "difficulty": "Hard",
    "hints": [
      "Think about using a stack to keep track of visible heights.",
      "Iterate through the heights from back to front to determine visibility."
    ],
    "company": "Citigroup"
  },
  {
    "question_id": "",
    "title": "Best Time to Buy and Sell Stock",
    "description": "You are given an array where the ith element is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.",
    "topic": "Array",
    "subtopic": "Dynamic Programming",
    "tags": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "input_format": "An array of integers prices representing the stock prices on each day.",
    "output_format": "An integer representing the maximum profit that can be made.",
    "constraints": [
      "1 <= prices.length <= 10^5",
      "0 <= prices[i] <= 10^4"
    ],
    "examples": [
      {
        "input": "prices = [7, 1, 5, 3, 6, 4]",
        "output": "5",
        "explanation": "Buy on day 2 (price = 1) and sell on day 5 (price = 6). Profit = 6 - 1 = 5."
      },
      {
        "input": "prices = [7, 6, 4, 3, 1]",
        "output": "0",
        "explanation": "In this case, no transactions are done and the max profit = 0."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Keep track of the minimum price seen so far.",
      "Calculate the profit by subtracting the current price from the minimum price."
    ],
    "company": "Citigroup"
  }
]