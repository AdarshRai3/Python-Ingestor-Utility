[
  {
    "question_id": "",
    "title": "Number of People Aware of a Secret",
    "description": "In a party of n people, there is a secret that is initially known only by one person. Each turn, a person who knows the secret can share it with a certain number of other people. Given the number of people and the list of pairs representing who shares the secret with whom, write a function to determine how many people know the secret at the end of the process.",
    "topic": "Graph",
    "subtopic": "Breadth-First Search",
    "tags": [
      "Graph",
      "BFS",
      "Secrets"
    ],
    "input_format": "An integer n representing the number of people, and a list of pairs where each pair (a, b) means person a shares the secret with person b.",
    "output_format": "An integer representing the number of people who are aware of the secret.",
    "constraints": [
      "1 <= n <= 1000",
      "0 <= pairs.length <= 10^4",
      "Each person is represented by a unique integer from 1 to n."
    ],
    "examples": [
      {
        "input": "n = 5, pairs = [[1, 2], [2, 3], [1, 4]]",
        "output": "4",
        "explanation": "Person 1 shares the secret with 2 and 4. Person 2 shares with 3. Thus, persons 1, 2, 3, and 4 know the secret, totaling 4."
      },
      {
        "input": "n = 4, pairs = [[1, 2], [1, 3], [1, 4]]",
        "output": "4",
        "explanation": "Person 1 shares the secret with everyone else. All 4 people know the secret."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Use a BFS approach to propagate knowledge of the secret.",
      "Consider using a queue to manage the sharing process.",
      "Keep track of who already knows the secret to avoid counting them multiple times."
    ],
    "company": "NCR"
  },
  {
    "question_id": "",
    "title": "Longest Substring Without Repeating Characters",
    "description": "Given a string s, find the length of the longest substring without repeating characters. A substring is a contiguous sequence of characters within a string.",
    "topic": "String",
    "subtopic": "Sliding Window",
    "tags": [
      "String",
      "Sliding Window",
      "HashMap"
    ],
    "input_format": "A string s containing English letters, digits, symbols, and spaces.",
    "output_format": "An integer representing the length of the longest substring without repeating characters.",
    "constraints": [
      "0 <= s.length <= 5 * 10^4",
      "s consists of English letters, digits, symbols and spaces."
    ],
    "examples": [
      {
        "input": "s = \"abcabcbb\"",
        "output": "3",
        "explanation": "The longest substring without repeating characters is \"abc\" which has a length of 3."
      },
      {
        "input": "s = \"bbbbb\"",
        "output": "1",
        "explanation": "The longest substring without repeating characters is \"b\" which has a length of 1."
      },
      {
        "input": "s = \"pwwkew\"",
        "output": "3",
        "explanation": "The longest substring without repeating characters is \"wke\" which has a length of 3."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Use a sliding window approach to track substrings.",
      "Utilize a hash map to remember the last index of each character."
    ],
    "company": "NCR"
  }
]