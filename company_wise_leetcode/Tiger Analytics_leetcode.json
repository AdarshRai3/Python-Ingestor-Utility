[
  {
    "question_id": "",
    "title": "Find Closest Number to Zero",
    "description": "Given an integer array nums, return the number that is closest to zero. If there are two numbers equally close to zero, return the positive one.",
    "topic": "Array",
    "subtopic": "Finding Elements",
    "tags": [
      "Array",
      "Searching",
      "Closest Number"
    ],
    "input_format": "An array of integers nums.",
    "output_format": "An integer representing the number that is closest to zero.",
    "constraints": [
      "1 <= nums.length <= 10^4",
      "-10^5 <= nums[i] <= 10^5"
    ],
    "examples": [
      {
        "input": "nums = [-1, 2, 3, -4, 5]",
        "output": "-1",
        "explanation": "The numbers closest to zero are -1 and 1, but -1 is chosen because it is the only negative number in this case."
      },
      {
        "input": "nums = [2, -1, 3, -2]",
        "output": "-1",
        "explanation": "Both numbers -1 and 1 are equally close to zero but since -1 is negative, we select it."
      },
      {
        "input": "nums = [-2, 1, -1, 2]",
        "output": "1",
        "explanation": "The numbers -1 and 1 are equally close to zero, but 1 is positive, so it is the chosen answer."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider how to compare the absolute values.",
      "Use Math.abs() to find the distance from zero."
    ],
    "company": "Tiger Analytics"
  },
  {
    "question_id": "",
    "title": "Consecutive Numbers",
    "description": "Given an array of integers, find the longest subsequence of consecutive numbers in the array. A subsequence is defined as a sequence that can be derived from the array by deleting some elements without changing the order of the remaining elements. Return the length of this subsequence.",
    "topic": "Array",
    "subtopic": "Subsequence",
    "tags": [
      "Array",
      "Subsequence",
      "Sorting"
    ],
    "input_format": "An array of integers nums.",
    "output_format": "An integer representing the length of the longest consecutive subsequence.",
    "constraints": [
      "1 <= nums.length <= 10^5",
      "-10^9 <= nums[i] <= 10^9"
    ],
    "examples": [
      {
        "input": "nums = [100, 4, 200, 1, 3, 2]",
        "output": "4",
        "explanation": "The longest consecutive subsequence is [1, 2, 3, 4], which has a length of 4."
      },
      {
        "input": "nums = [0, 0, 1, 1, 2, 2, 3, 3]",
        "output": "4",
        "explanation": "The longest consecutive subsequence is [0, 1, 2, 3], which has a length of 4."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider using a hash set for O(1) lookups.",
      "Sort the array to handle duplicates and find consecutive numbers.",
      "Use a two-pointer or sliding window approach to keep track of the length."
    ],
    "company": "Tiger Analytics"
  },
  {
    "question_id": "",
    "title": "Best Time to Buy and Sell Stock",
    "description": "You are given an array where the ith element is the price of a given stock on day i. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.",
    "topic": "Dynamic Programming",
    "subtopic": "Array Manipulation",
    "tags": [
      "Dynamic Programming",
      "Array",
      "Greedy"
    ],
    "input_format": "An array of integers prices, where prices[i] is the price of a given stock on day i.",
    "output_format": "An integer representing the maximum profit that can be achieved.",
    "constraints": [
      "1 <= prices.length <= 10^5",
      "0 <= prices[i] <= 10^4"
    ],
    "examples": [
      {
        "input": "prices = [7, 1, 5, 3, 6, 4]",
        "output": "5",
        "explanation": "Buy on day 2 (price = 1) and sell on day 5 (price = 6). The maximum profit is 6 - 1 = 5."
      },
      {
        "input": "prices = [7, 6, 4, 3, 1]",
        "output": "0",
        "explanation": "In this case, no transactions are done and the max profit is 0."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Keep track of the minimum price seen so far.",
      "Calculate the profit by subtracting the minimum price from the current price."
    ],
    "company": "Tiger Analytics"
  },
  {
    "question_id": "",
    "title": "Top K Frequent Elements",
    "description": "Given a non-empty array of integers, return the k most frequent elements. You may return the answer in any order. The frequency of an element is the number of times it appears in the array.",
    "topic": "Hash Table",
    "subtopic": "Frequency Counter",
    "tags": [
      "Hash Table",
      "Sorting",
      "Heap"
    ],
    "input_format": "An integer array nums and an integer k, where k is the number of top frequent elements to return.",
    "output_format": "An array of the k most frequent elements.",
    "constraints": [
      "1 <= nums.length <= 10^5",
      "-10^4 <= nums[i] <= 10^4",
      "k is in the range [1, the number of unique elements in the array]"
    ],
    "examples": [
      {
        "input": "nums = [1, 1, 1, 2, 2, 3], k = 2",
        "output": "[1, 2]",
        "explanation": "1 is the most frequent element, and 2 is the second most frequent."
      },
      {
        "input": "nums = [1], k = 1",
        "output": "[1]",
        "explanation": "Only one element present."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Use a hash table to count the frequency of each element.",
      "Consider using a heap to extract the k most frequent elements efficiently."
    ],
    "company": "Tiger Analytics"
  }
]