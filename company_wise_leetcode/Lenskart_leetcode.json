[
  {
    "question_id": "",
    "title": "Spiral Matrix",
    "description": "Given an m x n matrix, return all elements of the matrix in spiral order. The spiral order begins from the top-left corner and proceeds to the right, then downwards, leftwards, and upwards, continuing in this way in a spiral until all elements have been included.",
    "topic": "Matrix",
    "subtopic": "Traversal",
    "tags": [
      "Matrix",
      "Traversal",
      "Spiral"
    ],
    "input_format": "A two-dimensional array of integers representing the matrix.",
    "output_format": "A one-dimensional array of integers representing the elements in spiral order.",
    "constraints": [
      "1 <= m, n <= 10^4",
      "Total elements in the matrix should not exceed 10^4."
    ],
    "examples": [
      {
        "input": "matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]",
        "output": "[1, 2, 3, 6, 9, 8, 7, 4, 5]",
        "explanation": "The elements in spiral order are 1, 2, 3 from the top row, then 6 from the right column, 9, 8, 7 from the bottom row, and finally 4, 5 from the left column."
      },
      {
        "input": "matrix = [[1, 2], [3, 4]]",
        "output": "[1, 2, 4, 3]",
        "explanation": "The elements in spiral order are 1, 2 from the top row, and then 4, 3 from the bottom row."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Use four pointers to track the bounds of the matrix.",
      "Iteratively update the pointers as you traverse the matrix."
    ],
    "company": "Lenskart"
  },
  {
    "question_id": "",
    "title": "Container With Most Water",
    "description": "Given an integer array height representing the height of walls, find two lines that together with the x-axis form a container that can hold the most water. Return the maximum amount of water a container can store.",
    "topic": "Array",
    "subtopic": "Two Pointers",
    "tags": [
      "Array",
      "Two Pointers",
      "Greedy"
    ],
    "input_format": "An integer array height where 2 <= height.length <= 10^5.",
    "output_format": "An integer representing the maximum area of water the container can store.",
    "constraints": [
      "2 <= height.length <= 10^5",
      "0 <= height[i] <= 10^4"
    ],
    "examples": [
      {
        "input": "height = [1,8,6,2,5,4,8,3,7]",
        "output": "49",
        "explanation": "The container with the most water is formed between the lines at index 1 and 8, which is 7 units apart and the height is the minimum of the two lines (min(8, 7) = 7). Thus, the area is 7 * 7 = 49."
      },
      {
        "input": "height = [1,1]",
        "output": "1",
        "explanation": "The container with the most water is formed between the two lines at index 0 and 1, which are both height 1. Thus, the area is 1 * 1 = 1."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider using two pointers to find the maximum area efficiently."
    ],
    "company": "Lenskart"
  }
]