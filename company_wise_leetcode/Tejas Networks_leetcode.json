[
  {
    "question_id": "",
    "title": "Add Two Numbers",
    "description": "You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contains a single digit. Add the two numbers and return it as a linked list.",
    "topic": "Linked List",
    "subtopic": "Addition",
    "tags": [
      "Linked List",
      "Addition",
      "Two Pointers"
    ],
    "input_format": "Two linked lists l1 and l2 representing the two numbers.",
    "output_format": "A linked list representing the sum of the two numbers.",
    "constraints": [
      "The number of nodes in each linked list is in the range [1, 100].",
      "0 <= Node.val <= 9",
      "It is guaranteed that the input lists are well-formed and represent valid non-negative integers."
    ],
    "examples": [
      {
        "input": "l1 = [2,4,3], l2 = [5,6,4]",
        "output": "[7,0,8]",
        "explanation": "The numbers represented are 342 and 465. Their sum is 807, which is represented as the linked list [7,0,8]."
      },
      {
        "input": "l1 = [0], l2 = [0]",
        "output": "[0]",
        "explanation": "Both numbers are 0, so the sum is 0, represented as the linked list [0]."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider how you can handle carry overs during the addition process.",
      "Use a dummy node to simplify the process of building the result linked list."
    ],
    "company": "Tejas Networks"
  },
  {
    "question_id": "",
    "title": "Majority Element",
    "description": "Given an array of size n, find the majority element. The majority element is the element that appears more than n/2 times. You may assume that the majority element always exists in the array.",
    "topic": "Array",
    "subtopic": "Frequency Count",
    "tags": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "input_format": "An array of integers nums.",
    "output_format": "An integer representing the majority element.",
    "constraints": [
      "1 <= nums.length <= 10^5",
      "-10^9 <= nums[i] <= 10^9"
    ],
    "examples": [
      {
        "input": "nums = [3, 2, 3]",
        "output": "3",
        "explanation": "The majority element is 3, which appears 2 times (more than 3/2 = 1.5)."
      },
      {
        "input": "nums = [2, 2, 1, 1, 1, 2, 2]",
        "output": "2",
        "explanation": "The majority element is 2, which appears 4 times (more than 7/2 = 3.5)."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Think about using a hash map to count occurrences.",
      "There might be a more optimal solution!",
      "Can you solve it in O(n) time and O(1) space?"
    ],
    "company": "Tejas Networks"
  }
]