[
  {
    "question_id": "",
    "title": "Number of Islands",
    "description": "Given a 2D grid consisting of '1's (land) and '0's (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.",
    "topic": "Graph",
    "subtopic": "Depth First Search",
    "tags": [
      "Graph",
      "Depth First Search",
      "Recursion"
    ],
    "input_format": "A 2D grid of '1's and '0's, where 1 represents land and 0 represents water.",
    "output_format": "An integer representing the number of islands.",
    "constraints": [
      "m == grid.length",
      "n == grid[i].length",
      "1 <= m, n <= 300",
      "grid[i][j] is '0' or '1'."
    ],
    "examples": [
      {
        "input": "[['1','1','1','1','0'], ['1','1','0','1','0'], ['1','1','0','0','0'], ['0','0','0','0','0']]",
        "output": "1",
        "explanation": "All '1's are connected, forming a single island."
      },
      {
        "input": "[['1','1','0','0','0'], ['1','1','0','0','0'], ['0','0','1','0','0'], ['0','0','0','1','1']]",
        "output": "3",
        "explanation": "There are three islands formed by the groups of '1's."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider using Depth First Search (DFS) to explore and mark visited lands.",
      "Iterate through each cell, applying DFS for each land cell you encounter."
    ],
    "company": "HPE"
  },
  {
    "question_id": "",
    "title": "Longest Substring Without Repeating Characters",
    "description": "Given a string s, find the length of the longest substring without repeating characters. A substring is defined as a contiguous sequence of characters within the string.",
    "topic": "String",
    "subtopic": "Sliding Window",
    "tags": [
      "String",
      "Sliding Window",
      "HashMap"
    ],
    "input_format": "A single string s, where 0 <= s.length <= 5 * 10^4.",
    "output_format": "An integer representing the length of the longest substring without repeating characters.",
    "constraints": [
      "0 <= s.length <= 5 * 10^4",
      "s consists of English letters, digits, symbols, and spaces."
    ],
    "examples": [
      {
        "input": "s = \"abcabcbb\"",
        "output": "3",
        "explanation": "The longest substring without repeating characters is \"abc\" with length 3."
      },
      {
        "input": "s = \"bbbbb\"",
        "output": "1",
        "explanation": "The longest substring without repeating characters is \"b\" with length 1."
      },
      {
        "input": "s = \"pwwkew\"",
        "output": "3",
        "explanation": "The longest substring without repeating characters is \"wke\" with length 3."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Use a sliding window approach to expand and contract the substring.",
      "Utilize a set or hashmap to track characters and their indices."
    ],
    "company": "HPE"
  },
  {
    "question_id": "",
    "title": "Merge Two Sorted Lists",
    "description": "You are given the heads of two sorted linked lists, list1 and list2. Merge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists. Return the head of the new linked list.",
    "topic": "Linked List",
    "subtopic": "Merging Linked Lists",
    "tags": [
      "LinkedList",
      "Merge",
      "Sorting"
    ],
    "input_format": "Two sorted linked lists represented by their head nodes, list1 and list2.",
    "output_format": "A sorted linked list represented by the head node of the merged list.",
    "constraints": [
      "The number of nodes in both lists is in the range [0, 50].",
      "Node values are in the range [-100, 100]."
    ],
    "examples": [
      {
        "input": "list1 = [1, 2, 4], list2 = [1, 3, 4]",
        "output": "[1, 1, 2, 3, 4, 4]",
        "explanation": "Merging the two lists gives [1,1,2,3,4,4]."
      },
      {
        "input": "list1 = [], list2 = [0]",
        "output": "[0]",
        "explanation": "Since list1 is empty, the merged list is just list2: [0]."
      },
      {
        "input": "list1 = [], list2 = []",
        "output": "[]",
        "explanation": "Both lists are empty, so the merged list is also empty."
      }
    ],
    "difficulty": "Easy",
    "hints": [
      "Consider using a dummy node to simplify the merging process.",
      "Iterate through both lists, comparing values to select the smaller node."
    ],
    "company": "HPE"
  },
  {
    "question_id": "",
    "title": "Reverse Words in a String",
    "description": "Given a string s, you need to reverse the order of the words in the string. A word is defined as a sequence of non-space characters. The words in the string will be separated by one or more spaces. You must return the reversed words in a single string, with a single space separating each word. The leading and trailing spaces in the input string should be ignored when reversing the words.",
    "topic": "String",
    "subtopic": "Manipulation",
    "tags": [
      "String",
      "Manipulation",
      "Reverse"
    ],
    "input_format": "A single string s containing words that may be separated by spaces.",
    "output_format": "A single string with the words in reverse order, separated by a single space.",
    "constraints": [
      "1 <= s.length <= 10^4",
      "The input string s may contain leading or trailing spaces."
    ],
    "examples": [
      {
        "input": "s = '  hello world  '",
        "output": "'world hello'",
        "explanation": "After trimming leading and trailing spaces, the words are 'hello' and 'world'. When reversed, they become 'world hello'."
      },
      {
        "input": "s = '  a good   example '",
        "output": "'example good a'",
        "explanation": "The words are 'a', 'good', and 'example'. After reversing, the result is 'example good a'."
      }
    ],
    "difficulty": "Medium",
    "hints": [
      "Consider how to split the string based on spaces.",
      "You might need to handle multiple spaces between words."
    ],
    "company": "HPE"
  }
]